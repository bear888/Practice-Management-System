# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface ICompartmentDefinition implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  purpose: markdown  _purpose: ElementBase
  code: code  _code: ElementBase
  search: Boolean  _search: ElementBase
  resource: [CompartmentDefinitionResource]
}

type CompartmentDefinition implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  purpose: markdown  _purpose: ElementBase
  code: code  _code: ElementBase
  search: Boolean  _search: ElementBase
  resource: [CompartmentDefinitionResource]
}

type CompartmentDefinitionResource {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: code  _code: ElementBase
  param: [String]  _param: [ElementBase]
  documentation: String  _documentation: ElementBase
  startParam: uri  _startParam: ElementBase
  endParam: uri  _endParam: ElementBase
}

input CompartmentDefinitionInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  version: String  _version: ElementBaseInput
  versionAlgorithmString: String  _versionAlgorithmString: ElementBaseInput
  versionAlgorithmCoding: CodingInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  date: dateTime  _date: ElementBaseInput
  publisher: String  _publisher: ElementBaseInput
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBaseInput
  useContext: [UsageContextInput]
  purpose: markdown  _purpose: ElementBaseInput
  code: code  _code: ElementBaseInput
  search: Boolean  _search: ElementBaseInput
  resource: [CompartmentDefinitionResourceInputInput]
}

input CompartmentDefinitionResourceInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: code  _code: ElementBaseInput
  param: [String]  _param: [ElementBaseInput]
  documentation: String  _documentation: ElementBaseInput
  startParam: uri  _startParam: ElementBaseInput
  endParam: uri  _endParam: ElementBaseInput
}

type CompartmentDefinitionReadType {
  CompartmentDefinition(id: ID!): CompartmentDefinition
}

type CompartmentDefinitionListType {
  CompartmentDefinitionList(_filter: String
    code: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    name: [String]
    publisher: [String]
    resource: [token]
    status: [token]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [CompartmentDefinition]
}

type CompartmentDefinitionConnectionType {
  CompartmentDefinitionConection(_filter: String
    code: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    name: [String]
    publisher: [String]
    resource: [token]
    status: [token]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): CompartmentDefinitionConnection
}

type CompartmentDefinitionConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [CompartmentDefinitionEdge]
}

type CompartmentDefinitionEdge {
  mode: String
  score: Float
  resource: CompartmentDefinition
}

type CompartmentDefinitionCreateType {
  CompartmentDefinitionCreate(resource: CompartmentDefinitionInput): CompartmentDefinitionCreation
}

type CompartmentDefinitionCreation {
  location: String
  resource: CompartmentDefinition
  information: OperationOutcome
}

type CompartmentDefinitionUpdateType {
  CompartmentDefinitionUpdate(id: ID, resource: CompartmentDefinitionInput): CompartmentDefinitionUpdate
}

type CompartmentDefinitionUpdate {
  resource: CompartmentDefinition
  information: OperationOutcome
}

type CompartmentDefinitionDeleteType {
  CompartmentDefinitionDelete(id: ID): CompartmentDefinitionDelete
}

type CompartmentDefinitionDelete {
  information: OperationOutcome
}

