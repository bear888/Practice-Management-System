# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface ISearchParameter implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  derivedFrom: canonical  _derivedFrom: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  code: code  _code: ElementBase
  aliasCode: [code]  _aliasCode: [ElementBase]
  base: [code]  _base: [ElementBase]
  type: code  _type: ElementBase
  expression: String  _expression: ElementBase
  processingMode: code  _processingMode: ElementBase
  constraint: String  _constraint: ElementBase
  target: [code]  _target: [ElementBase]
  multipleOr: Boolean  _multipleOr: ElementBase
  multipleAnd: Boolean  _multipleAnd: ElementBase
  comparator: [code]  _comparator: [ElementBase]
  modifier: [code]  _modifier: [ElementBase]
  chain: [String]  _chain: [ElementBase]
  component: [SearchParameterComponent]
}

type SearchParameter implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  derivedFrom: canonical  _derivedFrom: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  code: code  _code: ElementBase
  aliasCode: [code]  _aliasCode: [ElementBase]
  base: [code]  _base: [ElementBase]
  type: code  _type: ElementBase
  expression: String  _expression: ElementBase
  processingMode: code  _processingMode: ElementBase
  constraint: String  _constraint: ElementBase
  target: [code]  _target: [ElementBase]
  multipleOr: Boolean  _multipleOr: ElementBase
  multipleAnd: Boolean  _multipleAnd: ElementBase
  comparator: [code]  _comparator: [ElementBase]
  modifier: [code]  _modifier: [ElementBase]
  chain: [String]  _chain: [ElementBase]
  component: [SearchParameterComponent]
}

type SearchParameterComponent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  definition: canonical  _definition: ElementBase
  expression: String  _expression: ElementBase
}

input SearchParameterInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  versionAlgorithmString: String  _versionAlgorithmString: ElementBaseInput
  versionAlgorithmCoding: CodingInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  derivedFrom: canonical  _derivedFrom: ElementBaseInput
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  date: dateTime  _date: ElementBaseInput
  publisher: String  _publisher: ElementBaseInput
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBaseInput
  useContext: [UsageContextInput]
  jurisdiction: [CodeableConceptInput]
  purpose: markdown  _purpose: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  copyrightLabel: String  _copyrightLabel: ElementBaseInput
  code: code  _code: ElementBaseInput
  aliasCode: [code]  _aliasCode: [ElementBaseInput]
  base: [code]  _base: [ElementBaseInput]
  type: code  _type: ElementBaseInput
  expression: String  _expression: ElementBaseInput
  processingMode: code  _processingMode: ElementBaseInput
  constraint: String  _constraint: ElementBaseInput
  target: [code]  _target: [ElementBaseInput]
  multipleOr: Boolean  _multipleOr: ElementBaseInput
  multipleAnd: Boolean  _multipleAnd: ElementBaseInput
  comparator: [code]  _comparator: [ElementBaseInput]
  modifier: [code]  _modifier: [ElementBaseInput]
  chain: [String]  _chain: [ElementBaseInput]
  component: [SearchParameterComponentInputInput]
}

input SearchParameterComponentInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  definition: canonical  _definition: ElementBaseInput
  expression: String  _expression: ElementBaseInput
}

type SearchParameterReadType {
  SearchParameter(id: ID!): SearchParameter
}

type SearchParameterListType {
  SearchParameterList(_filter: String
    base: [token]
    code: [token]
    component: [reference]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    derived_from: [reference]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    target: [token]
    type: [token]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [SearchParameter]
}

type SearchParameterConnectionType {
  SearchParameterConection(_filter: String
    base: [token]
    code: [token]
    component: [reference]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    derived_from: [reference]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    target: [token]
    type: [token]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): SearchParameterConnection
}

type SearchParameterConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [SearchParameterEdge]
}

type SearchParameterEdge {
  mode: String
  score: Float
  resource: SearchParameter
}

type SearchParameterCreateType {
  SearchParameterCreate(resource: SearchParameterInput): SearchParameterCreation
}

type SearchParameterCreation {
  location: String
  resource: SearchParameter
  information: OperationOutcome
}

type SearchParameterUpdateType {
  SearchParameterUpdate(id: ID, resource: SearchParameterInput): SearchParameterUpdate
}

type SearchParameterUpdate {
  resource: SearchParameter
  information: OperationOutcome
}

type SearchParameterDeleteType {
  SearchParameterDelete(id: ID): SearchParameterDelete
}

type SearchParameterDelete {
  information: OperationOutcome
}

