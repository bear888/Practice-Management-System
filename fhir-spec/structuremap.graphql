# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IStructureMap implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  structure: [StructureMapStructure]
  import: [canonical]  _import: [ElementBase]
  const: [StructureMapConst]
  group: [StructureMapGroup]!
}

type StructureMap implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  structure: [StructureMapStructure]
  import: [canonical]  _import: [ElementBase]
  const: [StructureMapConst]
  group: [StructureMapGroup]!
}

type StructureMapStructure {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  url: canonical  _url: ElementBase
  mode: code  _mode: ElementBase
  alias: String  _alias: ElementBase
  documentation: String  _documentation: ElementBase
}

type StructureMapConst {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: ID  _name: ElementBase
  value: String  _value: ElementBase
}

type StructureMapGroup {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: ID  _name: ElementBase
  extends: ID  _extends: ElementBase
  typeMode: code  _typeMode: ElementBase
  documentation: String  _documentation: ElementBase
  input: [StructureMapGroupInput]!
  rule: [StructureMapGroupRule]
}

type StructureMapGroupInput {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: ID  _name: ElementBase
  type: String  _type: ElementBase
  mode: code  _mode: ElementBase
  documentation: String  _documentation: ElementBase
}

type StructureMapGroupRule {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: ID  _name: ElementBase
  source: [StructureMapGroupRuleSource]!
  target: [StructureMapGroupRuleTarget]
  rule: [StructureMapGroupRule]
  dependent: [StructureMapGroupRuleDependent]
  documentation: String  _documentation: ElementBase
}

type StructureMapGroupRuleSource {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  context: ID  _context: ElementBase
  min: unsignedInt  _min: ElementBase
  max: String  _max: ElementBase
  type: String  _type: ElementBase
  defaultValue: String  _defaultValue: ElementBase
  element: String  _element: ElementBase
  listMode: code  _listMode: ElementBase
  variable: ID  _variable: ElementBase
  condition: String  _condition: ElementBase
  check: String  _check: ElementBase
  logMessage: String  _logMessage: ElementBase
}

type StructureMapGroupRuleTarget {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  context: String  _context: ElementBase
  element: String  _element: ElementBase
  variable: ID  _variable: ElementBase
  listMode: [code]  _listMode: [ElementBase]
  listRuleId: ID  _listRuleId: ElementBase
  transform: code  _transform: ElementBase
  parameter: [StructureMapGroupRuleTargetParameter]
}

type StructureMapGroupRuleTargetParameter {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  valueId: ID  _valueId: ElementBase
  valueString: String  _valueString: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueDate: date  _valueDate: ElementBase
  valueTime: time  _valueTime: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
}

type StructureMapGroupRuleDependent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: ID  _name: ElementBase
  parameter: [StructureMapGroupRuleTargetParameter]!
}

input StructureMapInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  versionAlgorithmString: String  _versionAlgorithmString: ElementBaseInput
  versionAlgorithmCoding: CodingInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  date: dateTime  _date: ElementBaseInput
  publisher: String  _publisher: ElementBaseInput
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBaseInput
  useContext: [UsageContextInput]
  jurisdiction: [CodeableConceptInput]
  purpose: markdown  _purpose: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  copyrightLabel: String  _copyrightLabel: ElementBaseInput
  structure: [StructureMapStructureInputInput]
  import: [canonical]  _import: [ElementBaseInput]
  const: [StructureMapConstInputInput]
  group: [StructureMapGroupInputInput]!
}

input StructureMapStructureInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: canonical  _url: ElementBaseInput
  mode: code  _mode: ElementBaseInput
  alias: String  _alias: ElementBaseInput
  documentation: String  _documentation: ElementBaseInput
}

input StructureMapConstInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: ID  _name: ElementBaseInput
  value: String  _value: ElementBaseInput
}

input StructureMapGroupInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: ID  _name: ElementBaseInput
  extends: ID  _extends: ElementBaseInput
  typeMode: code  _typeMode: ElementBaseInput
  documentation: String  _documentation: ElementBaseInput
  input: [StructureMapGroupInputInputInputInput]!
  rule: [StructureMapGroupInputRuleInputInput]
}

input StructureMapGroupInputInputInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: ID  _name: ElementBaseInput
  type: String  _type: ElementBaseInput
  mode: code  _mode: ElementBaseInput
  documentation: String  _documentation: ElementBaseInput
}

input StructureMapGroupInputRuleInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: ID  _name: ElementBaseInput
  source: [StructureMapGroupInputRuleInputSourceInputInput]!
  target: [StructureMapGroupInputRuleInputTargetInputInput]
  rule: [StructureMapGroupInputRuleInputInput]
  dependent: [StructureMapGroupInputRuleInputDependentInputInput]
  documentation: String  _documentation: ElementBaseInput
}

input StructureMapGroupInputRuleInputSourceInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  context: ID  _context: ElementBaseInput
  min: unsignedInt  _min: ElementBaseInput
  max: String  _max: ElementBaseInput
  type: String  _type: ElementBaseInput
  defaultValue: String  _defaultValue: ElementBaseInput
  element: String  _element: ElementBaseInput
  listMode: code  _listMode: ElementBaseInput
  variable: ID  _variable: ElementBaseInput
  condition: String  _condition: ElementBaseInput
  check: String  _check: ElementBaseInput
  logMessage: String  _logMessage: ElementBaseInput
}

input StructureMapGroupInputRuleInputTargetInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  context: String  _context: ElementBaseInput
  element: String  _element: ElementBaseInput
  variable: ID  _variable: ElementBaseInput
  listMode: [code]  _listMode: [ElementBaseInput]
  listRuleId: ID  _listRuleId: ElementBaseInput
  transform: code  _transform: ElementBaseInput
  parameter: [StructureMapGroupInputRuleInputTargetInputParameterInputInput]
}

input StructureMapGroupInputRuleInputTargetInputParameterInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  valueId: ID  _valueId: ElementBaseInput
  valueString: String  _valueString: ElementBaseInput
  valueBoolean: Boolean  _valueBoolean: ElementBaseInput
  valueInteger: Int  _valueInteger: ElementBaseInput
  valueDecimal: decimal  _valueDecimal: ElementBaseInput
  valueDate: date  _valueDate: ElementBaseInput
  valueTime: time  _valueTime: ElementBaseInput
  valueDateTime: dateTime  _valueDateTime: ElementBaseInput
}

input StructureMapGroupInputRuleInputDependentInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: ID  _name: ElementBaseInput
  parameter: [StructureMapGroupInputRuleInputTargetInputParameterInputInput]!
}

type StructureMapReadType {
  StructureMap(id: ID!): StructureMap
}

type StructureMapListType {
  StructureMapList(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [StructureMap]
}

type StructureMapConnectionType {
  StructureMapConection(_filter: String
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): StructureMapConnection
}

type StructureMapConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [StructureMapEdge]
}

type StructureMapEdge {
  mode: String
  score: Float
  resource: StructureMap
}

type StructureMapCreateType {
  StructureMapCreate(resource: StructureMapInput): StructureMapCreation
}

type StructureMapCreation {
  location: String
  resource: StructureMap
  information: OperationOutcome
}

type StructureMapUpdateType {
  StructureMapUpdate(id: ID, resource: StructureMapInput): StructureMapUpdate
}

type StructureMapUpdate {
  resource: StructureMap
  information: OperationOutcome
}

type StructureMapDeleteType {
  StructureMapDelete(id: ID): StructureMapDelete
}

type StructureMapDelete {
  information: OperationOutcome
}

