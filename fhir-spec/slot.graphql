# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface ISlot implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableReference]
  specialty: [CodeableConcept]
  appointmentType: [CodeableConcept]
  schedule: Reference!
  status: code  _status: ElementBase
  start: instant  _start: ElementBase
  end: instant  _end: ElementBase
  overbooked: Boolean  _overbooked: ElementBase
  comment: String  _comment: ElementBase
}

type Slot implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableReference]
  specialty: [CodeableConcept]
  appointmentType: [CodeableConcept]
  schedule: Reference!
  status: code  _status: ElementBase
  start: instant  _start: ElementBase
  end: instant  _end: ElementBase
  overbooked: Boolean  _overbooked: ElementBase
  comment: String  _comment: ElementBase
}

input SlotInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  serviceCategory: [CodeableConceptInput]
  serviceType: [CodeableReferenceInput]
  specialty: [CodeableConceptInput]
  appointmentType: [CodeableConceptInput]
  schedule: ReferenceInput!
  status: code  _status: ElementBaseInput
  start: instant  _start: ElementBaseInput
  end: instant  _end: ElementBaseInput
  overbooked: Boolean  _overbooked: ElementBaseInput
  comment: String  _comment: ElementBaseInput
}

type SlotReadType {
  Slot(id: ID!): Slot
}

type SlotListType {
  SlotList(_filter: String
    appointment_type: [token]
    identifier: [token]
    schedule: [reference]
    service_category: [token]
    service_type: [token]
    service_type_reference: [reference]
    specialty: [token]
    start: [date]
    status: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [Slot]
}

type SlotConnectionType {
  SlotConection(_filter: String
    appointment_type: [token]
    identifier: [token]
    schedule: [reference]
    service_category: [token]
    service_type: [token]
    service_type_reference: [reference]
    specialty: [token]
    start: [date]
    status: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): SlotConnection
}

type SlotConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [SlotEdge]
}

type SlotEdge {
  mode: String
  score: Float
  resource: Slot
}

type SlotCreateType {
  SlotCreate(resource: SlotInput): SlotCreation
}

type SlotCreation {
  location: String
  resource: Slot
  information: OperationOutcome
}

type SlotUpdateType {
  SlotUpdate(id: ID, resource: SlotInput): SlotUpdate
}

type SlotUpdate {
  resource: Slot
  information: OperationOutcome
}

type SlotDeleteType {
  SlotDelete(id: ID): SlotDelete
}

type SlotDelete {
  information: OperationOutcome
}

