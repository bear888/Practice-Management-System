# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IClaim implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  traceNumber: [Identifier]
  status: code  _status: ElementBase
  type: CodeableConcept!
  subType: CodeableConcept
  use: code  _use: ElementBase
  patient: Reference!
  billablePeriod: Period
  created: dateTime  _created: ElementBase
  enterer: Reference
  insurer: Reference
  provider: Reference
  priority: CodeableConcept
  fundsReserve: CodeableConcept
  related: [ClaimRelated]
  prescription: Reference
  originalPrescription: Reference
  payee: ClaimPayee
  referral: Reference
  encounter: [Reference]
  facility: Reference
  diagnosisRelatedGroup: CodeableConcept
  event: [ClaimEvent]
  careTeam: [ClaimCareTeam]
  supportingInfo: [ClaimSupportingInfo]
  diagnosis: [ClaimDiagnosis]
  procedure: [ClaimProcedure]
  insurance: [ClaimInsurance]
  accident: ClaimAccident
  patientPaid: Money
  item: [ClaimItem]
  total: Money
}

type Claim implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  traceNumber: [Identifier]
  status: code  _status: ElementBase
  type: CodeableConcept!
  subType: CodeableConcept
  use: code  _use: ElementBase
  patient: Reference!
  billablePeriod: Period
  created: dateTime  _created: ElementBase
  enterer: Reference
  insurer: Reference
  provider: Reference
  priority: CodeableConcept
  fundsReserve: CodeableConcept
  related: [ClaimRelated]
  prescription: Reference
  originalPrescription: Reference
  payee: ClaimPayee
  referral: Reference
  encounter: [Reference]
  facility: Reference
  diagnosisRelatedGroup: CodeableConcept
  event: [ClaimEvent]
  careTeam: [ClaimCareTeam]
  supportingInfo: [ClaimSupportingInfo]
  diagnosis: [ClaimDiagnosis]
  procedure: [ClaimProcedure]
  insurance: [ClaimInsurance]
  accident: ClaimAccident
  patientPaid: Money
  item: [ClaimItem]
  total: Money
}

type ClaimRelated {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  claim: Reference
  relationship: CodeableConcept
  reference: Identifier
}

type ClaimPayee {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  party: Reference
}

type ClaimEvent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  whenDateTime: dateTime  _whenDateTime: ElementBase
  whenPeriod: Period
}

type ClaimCareTeam {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  provider: Reference!
  responsible: Boolean  _responsible: ElementBase
  role: CodeableConcept
  specialty: CodeableConcept
}

type ClaimSupportingInfo {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  category: CodeableConcept!
  code: CodeableConcept
  timingDate: date  _timingDate: ElementBase
  timingPeriod: Period
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueString: String  _valueString: ElementBase
  valueQuantity: Quantity
  valueAttachment: Attachment
  valueReference: Reference
  valueIdentifier: Identifier
  reason: CodeableConcept
}

type ClaimDiagnosis {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  diagnosisCodeableConcept: CodeableConcept
  diagnosisReference: Reference
  type: [CodeableConcept]
  onAdmission: CodeableConcept
}

type ClaimProcedure {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  type: [CodeableConcept]
  date: dateTime  _date: ElementBase
  procedureCodeableConcept: CodeableConcept
  procedureReference: Reference
  udi: [Reference]
}

type ClaimInsurance {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  focal: Boolean  _focal: ElementBase
  identifier: Identifier
  coverage: Reference!
  businessArrangement: String  _businessArrangement: ElementBase
  preAuthRef: [String]  _preAuthRef: [ElementBase]
  claimResponse: Reference
}

type ClaimAccident {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  date: date  _date: ElementBase
  type: CodeableConcept
  locationAddress: Address
  locationReference: Reference
}

type ClaimItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  traceNumber: [Identifier]
  careTeamSequence: [positiveInt]  _careTeamSequence: [ElementBase]
  diagnosisSequence: [positiveInt]  _diagnosisSequence: [ElementBase]
  procedureSequence: [positiveInt]  _procedureSequence: [ElementBase]
  informationSequence: [positiveInt]  _informationSequence: [ElementBase]
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept
  productOrServiceEnd: CodeableConcept
  request: [Reference]
  modifier: [CodeableConcept]
  programCode: [CodeableConcept]
  servicedDate: date  _servicedDate: ElementBase
  servicedPeriod: Period
  locationCodeableConcept: CodeableConcept
  locationAddress: Address
  locationReference: Reference
  patientPaid: Money
  quantity: Quantity
  unitPrice: Money
  factor: decimal  _factor: ElementBase
  tax: Money
  net: Money
  udi: [Reference]
  bodySite: [ClaimItemBodySite]
  encounter: [Reference]
  detail: [ClaimItemDetail]
}

type ClaimItemBodySite {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  site: [CodeableReference]!
  subSite: [CodeableConcept]
}

type ClaimItemDetail {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  traceNumber: [Identifier]
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept
  productOrServiceEnd: CodeableConcept
  modifier: [CodeableConcept]
  programCode: [CodeableConcept]
  patientPaid: Money
  quantity: Quantity
  unitPrice: Money
  factor: decimal  _factor: ElementBase
  tax: Money
  net: Money
  udi: [Reference]
  subDetail: [ClaimItemDetailSubDetail]
}

type ClaimItemDetailSubDetail {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  traceNumber: [Identifier]
  revenue: CodeableConcept
  category: CodeableConcept
  productOrService: CodeableConcept
  productOrServiceEnd: CodeableConcept
  modifier: [CodeableConcept]
  programCode: [CodeableConcept]
  patientPaid: Money
  quantity: Quantity
  unitPrice: Money
  factor: decimal  _factor: ElementBase
  tax: Money
  net: Money
  udi: [Reference]
}

input ClaimInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  traceNumber: [IdentifierInput]
  status: code  _status: ElementBaseInput
  type: CodeableConceptInput!
  subType: CodeableConceptInput
  use: code  _use: ElementBaseInput
  patient: ReferenceInput!
  billablePeriod: PeriodInput
  created: dateTime  _created: ElementBaseInput
  enterer: ReferenceInput
  insurer: ReferenceInput
  provider: ReferenceInput
  priority: CodeableConceptInput
  fundsReserve: CodeableConceptInput
  related: [ClaimRelatedInputInput]
  prescription: ReferenceInput
  originalPrescription: ReferenceInput
  payee: ClaimPayeeInputInput
  referral: ReferenceInput
  encounter: [ReferenceInput]
  facility: ReferenceInput
  diagnosisRelatedGroup: CodeableConceptInput
  event: [ClaimEventInputInput]
  careTeam: [ClaimCareTeamInputInput]
  supportingInfo: [ClaimSupportingInfoInputInput]
  diagnosis: [ClaimDiagnosisInputInput]
  procedure: [ClaimProcedureInputInput]
  insurance: [ClaimInsuranceInputInput]
  accident: ClaimAccidentInputInput
  patientPaid: MoneyInput
  item: [ClaimItemInputInput]
  total: MoneyInput
}

input ClaimRelatedInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  claim: ReferenceInput
  relationship: CodeableConceptInput
  reference: IdentifierInput
}

input ClaimPayeeInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  party: ReferenceInput
}

input ClaimEventInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  whenDateTime: dateTime  _whenDateTime: ElementBaseInput
  whenPeriod: PeriodInput
}

input ClaimCareTeamInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  provider: ReferenceInput!
  responsible: Boolean  _responsible: ElementBaseInput
  role: CodeableConceptInput
  specialty: CodeableConceptInput
}

input ClaimSupportingInfoInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  category: CodeableConceptInput!
  code: CodeableConceptInput
  timingDate: date  _timingDate: ElementBaseInput
  timingPeriod: PeriodInput
  valueBoolean: Boolean  _valueBoolean: ElementBaseInput
  valueString: String  _valueString: ElementBaseInput
  valueQuantity: QuantityInput
  valueAttachment: AttachmentInput
  valueReference: ReferenceInput
  valueIdentifier: IdentifierInput
  reason: CodeableConceptInput
}

input ClaimDiagnosisInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  diagnosisCodeableConcept: CodeableConceptInput
  diagnosisReference: ReferenceInput
  type: [CodeableConceptInput]
  onAdmission: CodeableConceptInput
}

input ClaimProcedureInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  type: [CodeableConceptInput]
  date: dateTime  _date: ElementBaseInput
  procedureCodeableConcept: CodeableConceptInput
  procedureReference: ReferenceInput
  udi: [ReferenceInput]
}

input ClaimInsuranceInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  focal: Boolean  _focal: ElementBaseInput
  identifier: IdentifierInput
  coverage: ReferenceInput!
  businessArrangement: String  _businessArrangement: ElementBaseInput
  preAuthRef: [String]  _preAuthRef: [ElementBaseInput]
  claimResponse: ReferenceInput
}

input ClaimAccidentInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  date: date  _date: ElementBaseInput
  type: CodeableConceptInput
  locationAddress: AddressInput
  locationReference: ReferenceInput
}

input ClaimItemInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  traceNumber: [IdentifierInput]
  careTeamSequence: [positiveInt]  _careTeamSequence: [ElementBaseInput]
  diagnosisSequence: [positiveInt]  _diagnosisSequence: [ElementBaseInput]
  procedureSequence: [positiveInt]  _procedureSequence: [ElementBaseInput]
  informationSequence: [positiveInt]  _informationSequence: [ElementBaseInput]
  revenue: CodeableConceptInput
  category: CodeableConceptInput
  productOrService: CodeableConceptInput
  productOrServiceEnd: CodeableConceptInput
  request: [ReferenceInput]
  modifier: [CodeableConceptInput]
  programCode: [CodeableConceptInput]
  servicedDate: date  _servicedDate: ElementBaseInput
  servicedPeriod: PeriodInput
  locationCodeableConcept: CodeableConceptInput
  locationAddress: AddressInput
  locationReference: ReferenceInput
  patientPaid: MoneyInput
  quantity: QuantityInput
  unitPrice: MoneyInput
  factor: decimal  _factor: ElementBaseInput
  tax: MoneyInput
  net: MoneyInput
  udi: [ReferenceInput]
  bodySite: [ClaimItemInputBodySiteInputInput]
  encounter: [ReferenceInput]
  detail: [ClaimItemInputDetailInputInput]
}

input ClaimItemInputBodySiteInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  site: [CodeableReferenceInput]!
  subSite: [CodeableConceptInput]
}

input ClaimItemInputDetailInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  traceNumber: [IdentifierInput]
  revenue: CodeableConceptInput
  category: CodeableConceptInput
  productOrService: CodeableConceptInput
  productOrServiceEnd: CodeableConceptInput
  modifier: [CodeableConceptInput]
  programCode: [CodeableConceptInput]
  patientPaid: MoneyInput
  quantity: QuantityInput
  unitPrice: MoneyInput
  factor: decimal  _factor: ElementBaseInput
  tax: MoneyInput
  net: MoneyInput
  udi: [ReferenceInput]
  subDetail: [ClaimItemInputDetailInputSubDetailInputInput]
}

input ClaimItemInputDetailInputSubDetailInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  traceNumber: [IdentifierInput]
  revenue: CodeableConceptInput
  category: CodeableConceptInput
  productOrService: CodeableConceptInput
  productOrServiceEnd: CodeableConceptInput
  modifier: [CodeableConceptInput]
  programCode: [CodeableConceptInput]
  patientPaid: MoneyInput
  quantity: QuantityInput
  unitPrice: MoneyInput
  factor: decimal  _factor: ElementBaseInput
  tax: MoneyInput
  net: MoneyInput
  udi: [ReferenceInput]
}

type ClaimReadType {
  Claim(id: ID!): Claim
}

type ClaimListType {
  ClaimList(_filter: String
    care_team: [reference]
    created: [date]
    detail_udi: [reference]
    encounter: [reference]
    enterer: [reference]
    facility: [reference]
    identifier: [token]
    insurer: [reference]
    item_udi: [reference]
    patient: [reference]
    payee: [reference]
    priority: [token]
    procedure_udi: [reference]
    provider: [reference]
    status: [token]
    subdetail_udi: [reference]
    use: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [Claim]
}

type ClaimConnectionType {
  ClaimConection(_filter: String
    care_team: [reference]
    created: [date]
    detail_udi: [reference]
    encounter: [reference]
    enterer: [reference]
    facility: [reference]
    identifier: [token]
    insurer: [reference]
    item_udi: [reference]
    patient: [reference]
    payee: [reference]
    priority: [token]
    procedure_udi: [reference]
    provider: [reference]
    status: [token]
    subdetail_udi: [reference]
    use: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): ClaimConnection
}

type ClaimConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [ClaimEdge]
}

type ClaimEdge {
  mode: String
  score: Float
  resource: Claim
}

type ClaimCreateType {
  ClaimCreate(resource: ClaimInput): ClaimCreation
}

type ClaimCreation {
  location: String
  resource: Claim
  information: OperationOutcome
}

type ClaimUpdateType {
  ClaimUpdate(id: ID, resource: ClaimInput): ClaimUpdate
}

type ClaimUpdate {
  resource: Claim
  information: OperationOutcome
}

type ClaimDeleteType {
  ClaimDelete(id: ID): ClaimDelete
}

type ClaimDelete {
  information: OperationOutcome
}

