# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface ITestScript implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  testSystem: [TestScriptTestSystem]
  metadata: TestScriptMetadata
  scope: [TestScriptScope]
  fixture: [TestScriptFixture]
  profile: [canonical]  _profile: [ElementBase]
  variable: [TestScriptVariable]
  setup: TestScriptSetup
  test: [TestScriptTest]
  teardown: TestScriptTeardown
  common: [TestScriptSetupActionCommon]
}

type TestScript implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  testSystem: [TestScriptTestSystem]
  metadata: TestScriptMetadata
  scope: [TestScriptScope]
  fixture: [TestScriptFixture]
  profile: [canonical]  _profile: [ElementBase]
  variable: [TestScriptVariable]
  setup: TestScriptSetup
  test: [TestScriptTest]
  teardown: TestScriptTeardown
  common: [TestScriptSetupActionCommon]
}

type TestScriptTestSystem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  index: positiveInt  _index: ElementBase
  title: String  _title: ElementBase
  actor: [canonical]  _actor: [ElementBase]
  description: markdown  _description: ElementBase
  url: url  _url: ElementBase
}

type TestScriptMetadata {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  link: [TestScriptMetadataLink]
  capability: [TestScriptMetadataCapability]!
}

type TestScriptMetadataLink {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  description: String  _description: ElementBase
}

type TestScriptMetadataCapability {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  required: Boolean  _required: ElementBase
  validated: Boolean  _validated: ElementBase
  description: String  _description: ElementBase
  origin: [Int]  _origin: [ElementBase]
  destination: Int  _destination: ElementBase
  link: [uri]  _link: [ElementBase]
  capabilities: canonical  _capabilities: ElementBase
}

type TestScriptScope {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  artifact: canonical  _artifact: ElementBase
  conformance: CodeableConcept
  phase: CodeableConcept
}

type TestScriptFixture {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  autocreate: Boolean  _autocreate: ElementBase
  autodelete: Boolean  _autodelete: ElementBase
  resource: Reference
  expression: Expression
}

type TestScriptVariable {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: String  _name: ElementBase
  defaultValue: String  _defaultValue: ElementBase
  description: String  _description: ElementBase
  expression: Expression
  headerField: String  _headerField: ElementBase
  hint: String  _hint: ElementBase
  path: String  _path: ElementBase
  sourceId: ID  _sourceId: ElementBase
}

type TestScriptSetup {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  action: [TestScriptSetupAction]
}

type TestScriptSetupAction {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  common: TestScriptSetupActionCommon
  operation: TestScriptSetupActionOperation
  assert: TestScriptSetupActionAssert
}

type TestScriptSetupActionCommon {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  testScript: canonical  _testScript: ElementBase
  keyRef: ID  _keyRef: ElementBase
  parameter: [TestScriptSetupActionCommonParameter]
}

type TestScriptSetupActionCommonParameter {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: String  _name: ElementBase
  value: String  _value: ElementBase
}

type TestScriptSetupActionOperation {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: Coding
  resource: uri  _resource: ElementBase
  label: String  _label: ElementBase
  description: String  _description: ElementBase
  accept: code  _accept: ElementBase
  contentType: code  _contentType: ElementBase
  destination: Int  _destination: ElementBase
  encodeRequestUrl: Boolean  _encodeRequestUrl: ElementBase
  method: code  _method: ElementBase
  origin: Int  _origin: ElementBase
  params: String  _params: ElementBase
  requestHeader: [TestScriptSetupActionOperationRequestHeader]
  requestId: ID  _requestId: ElementBase
  responseId: ID  _responseId: ElementBase
  sourceId: ID  _sourceId: ElementBase
  targetId: ID  _targetId: ElementBase
  url: String  _url: ElementBase
}

type TestScriptSetupActionOperationRequestHeader {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  field: String  _field: ElementBase
  value: String  _value: ElementBase
}

type TestScriptSetupActionAssert {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  label: String  _label: ElementBase
  key: ID  _key: ElementBase
  evaluateBasedOn: [ID]  _evaluateBasedOn: [ElementBase]
  description: String  _description: ElementBase
  direction: code  _direction: ElementBase
  compareToSourceId: String  _compareToSourceId: ElementBase
  compareToSourceExpression: Expression
  compareToSourcePath: String  _compareToSourcePath: ElementBase
  contentType: code  _contentType: ElementBase
  defaultManualCompletion: code  _defaultManualCompletion: ElementBase
  expression: Expression
  headerField: String  _headerField: ElementBase
  minimumId: String  _minimumId: ElementBase
  navigationLinks: Boolean  _navigationLinks: ElementBase
  operator: code  _operator: ElementBase
  path: String  _path: ElementBase
  requestMethod: code  _requestMethod: ElementBase
  requestURL: String  _requestURL: ElementBase
  resource: uri  _resource: ElementBase
  response: code  _response: ElementBase
  responseCode: String  _responseCode: ElementBase
  sourceId: ID  _sourceId: ElementBase
  stopTestOnFail: Boolean  _stopTestOnFail: ElementBase
  validateProfileId: ID  _validateProfileId: ElementBase
  value: String  _value: ElementBase
  warningOnly: Boolean  _warningOnly: ElementBase
  requirement: [TestScriptSetupActionAssertRequirement]
}

type TestScriptSetupActionAssertRequirement {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  reference: canonical  _reference: ElementBase
  key: ID  _key: ElementBase
}

type TestScriptTest {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: String  _name: ElementBase
  description: String  _description: ElementBase
  action: [TestScriptSetupAction]
}

type TestScriptTeardown {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  action: [TestScriptSetupAction]!
}

input TestScriptInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  versionAlgorithmString: String  _versionAlgorithmString: ElementBaseInput
  versionAlgorithmCoding: CodingInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  date: dateTime  _date: ElementBaseInput
  publisher: String  _publisher: ElementBaseInput
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBaseInput
  useContext: [UsageContextInput]
  jurisdiction: [CodeableConceptInput]
  purpose: markdown  _purpose: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  copyrightLabel: String  _copyrightLabel: ElementBaseInput
  testSystem: [TestScriptTestSystemInputInput]
  metadata: TestScriptMetadataInputInput
  scope: [TestScriptScopeInputInput]
  fixture: [TestScriptFixtureInputInput]
  profile: [canonical]  _profile: [ElementBaseInput]
  variable: [TestScriptVariableInputInput]
  setup: TestScriptSetupInputInput
  test: [TestScriptTestInputInput]
  teardown: TestScriptTeardownInputInput
  common: [TestScriptSetupInputActionInputCommonInputInput]
}

input TestScriptTestSystemInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  index: positiveInt  _index: ElementBaseInput
  title: String  _title: ElementBaseInput
  actor: [canonical]  _actor: [ElementBaseInput]
  description: markdown  _description: ElementBaseInput
  url: url  _url: ElementBaseInput
}

input TestScriptMetadataInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  link: [TestScriptMetadataInputLinkInputInput]
  capability: [TestScriptMetadataInputCapabilityInputInput]!
}

input TestScriptMetadataInputLinkInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  description: String  _description: ElementBaseInput
}

input TestScriptMetadataInputCapabilityInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  required: Boolean  _required: ElementBaseInput
  validated: Boolean  _validated: ElementBaseInput
  description: String  _description: ElementBaseInput
  origin: [Int]  _origin: [ElementBaseInput]
  destination: Int  _destination: ElementBaseInput
  link: [uri]  _link: [ElementBaseInput]
  capabilities: canonical  _capabilities: ElementBaseInput
}

input TestScriptScopeInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  artifact: canonical  _artifact: ElementBaseInput
  conformance: CodeableConceptInput
  phase: CodeableConceptInput
}

input TestScriptFixtureInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  autocreate: Boolean  _autocreate: ElementBaseInput
  autodelete: Boolean  _autodelete: ElementBaseInput
  resource: ReferenceInput
  expression: ExpressionInput
}

input TestScriptVariableInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: String  _name: ElementBaseInput
  defaultValue: String  _defaultValue: ElementBaseInput
  description: String  _description: ElementBaseInput
  expression: ExpressionInput
  headerField: String  _headerField: ElementBaseInput
  hint: String  _hint: ElementBaseInput
  path: String  _path: ElementBaseInput
  sourceId: ID  _sourceId: ElementBaseInput
}

input TestScriptSetupInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  action: [TestScriptSetupInputActionInputInput]
}

input TestScriptSetupInputActionInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  common: TestScriptSetupInputActionInputCommonInputInput
  operation: TestScriptSetupInputActionInputOperationInputInput
  assert: TestScriptSetupInputActionInputAssertInputInput
}

input TestScriptSetupInputActionInputCommonInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  testScript: canonical  _testScript: ElementBaseInput
  keyRef: ID  _keyRef: ElementBaseInput
  parameter: [TestScriptSetupInputActionInputCommonInputParameterInputInput]
}

input TestScriptSetupInputActionInputCommonInputParameterInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: String  _name: ElementBaseInput
  value: String  _value: ElementBaseInput
}

input TestScriptSetupInputActionInputOperationInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodingInput
  resource: uri  _resource: ElementBaseInput
  label: String  _label: ElementBaseInput
  description: String  _description: ElementBaseInput
  accept: code  _accept: ElementBaseInput
  contentType: code  _contentType: ElementBaseInput
  destination: Int  _destination: ElementBaseInput
  encodeRequestUrl: Boolean  _encodeRequestUrl: ElementBaseInput
  method: code  _method: ElementBaseInput
  origin: Int  _origin: ElementBaseInput
  params: String  _params: ElementBaseInput
  requestHeader: [TestScriptSetupInputActionInputOperationInputRequestHeaderInputInput]
  requestId: ID  _requestId: ElementBaseInput
  responseId: ID  _responseId: ElementBaseInput
  sourceId: ID  _sourceId: ElementBaseInput
  targetId: ID  _targetId: ElementBaseInput
  url: String  _url: ElementBaseInput
}

input TestScriptSetupInputActionInputOperationInputRequestHeaderInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  field: String  _field: ElementBaseInput
  value: String  _value: ElementBaseInput
}

input TestScriptSetupInputActionInputAssertInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  label: String  _label: ElementBaseInput
  key: ID  _key: ElementBaseInput
  evaluateBasedOn: [ID]  _evaluateBasedOn: [ElementBaseInput]
  description: String  _description: ElementBaseInput
  direction: code  _direction: ElementBaseInput
  compareToSourceId: String  _compareToSourceId: ElementBaseInput
  compareToSourceExpression: ExpressionInput
  compareToSourcePath: String  _compareToSourcePath: ElementBaseInput
  contentType: code  _contentType: ElementBaseInput
  defaultManualCompletion: code  _defaultManualCompletion: ElementBaseInput
  expression: ExpressionInput
  headerField: String  _headerField: ElementBaseInput
  minimumId: String  _minimumId: ElementBaseInput
  navigationLinks: Boolean  _navigationLinks: ElementBaseInput
  operator: code  _operator: ElementBaseInput
  path: String  _path: ElementBaseInput
  requestMethod: code  _requestMethod: ElementBaseInput
  requestURL: String  _requestURL: ElementBaseInput
  resource: uri  _resource: ElementBaseInput
  response: code  _response: ElementBaseInput
  responseCode: String  _responseCode: ElementBaseInput
  sourceId: ID  _sourceId: ElementBaseInput
  stopTestOnFail: Boolean  _stopTestOnFail: ElementBaseInput
  validateProfileId: ID  _validateProfileId: ElementBaseInput
  value: String  _value: ElementBaseInput
  warningOnly: Boolean  _warningOnly: ElementBaseInput
  requirement: [TestScriptSetupInputActionInputAssertInputRequirementInputInput]
}

input TestScriptSetupInputActionInputAssertInputRequirementInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  reference: canonical  _reference: ElementBaseInput
  key: ID  _key: ElementBaseInput
}

input TestScriptTestInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: String  _name: ElementBaseInput
  description: String  _description: ElementBaseInput
  action: [TestScriptSetupInputActionInputInput]
}

input TestScriptTeardownInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  action: [TestScriptSetupInputActionInputInput]!
}

type TestScriptReadType {
  TestScript(id: ID!): TestScript
}

type TestScriptListType {
  TestScriptList(_filter: String
    artifact: [reference]
    conformance: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    phase: [token]
    publisher: [String]
    scope_artifact_conformance: [composite]
    scope_artifact_phase: [composite]
    status: [token]
    testscript_capability: [String]
    title: [String]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [TestScript]
}

type TestScriptConnectionType {
  TestScriptConection(_filter: String
    artifact: [reference]
    conformance: [token]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    phase: [token]
    publisher: [String]
    scope_artifact_conformance: [composite]
    scope_artifact_phase: [composite]
    status: [token]
    testscript_capability: [String]
    title: [String]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): TestScriptConnection
}

type TestScriptConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [TestScriptEdge]
}

type TestScriptEdge {
  mode: String
  score: Float
  resource: TestScript
}

type TestScriptCreateType {
  TestScriptCreate(resource: TestScriptInput): TestScriptCreation
}

type TestScriptCreation {
  location: String
  resource: TestScript
  information: OperationOutcome
}

type TestScriptUpdateType {
  TestScriptUpdate(id: ID, resource: TestScriptInput): TestScriptUpdate
}

type TestScriptUpdate {
  resource: TestScript
  information: OperationOutcome
}

type TestScriptDeleteType {
  TestScriptDelete(id: ID): TestScriptDelete
}

type TestScriptDelete {
  information: OperationOutcome
}

