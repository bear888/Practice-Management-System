# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IArtifactAssessment implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  title: String  _title: ElementBase
  citeAs: markdown  _citeAs: ElementBase
  artifactReference: Reference
  artifactUri: uri  _artifactUri: ElementBase
  relatesTo: [ArtifactAssessmentRelatesTo]
  date: dateTime  _date: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  content: [ArtifactAssessmentContent]
  workflowStatus: code  _workflowStatus: ElementBase
  disposition: code  _disposition: ElementBase
}

type ArtifactAssessment implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  title: String  _title: ElementBase
  citeAs: markdown  _citeAs: ElementBase
  artifactReference: Reference
  artifactUri: uri  _artifactUri: ElementBase
  relatesTo: [ArtifactAssessmentRelatesTo]
  date: dateTime  _date: ElementBase
  copyright: markdown  _copyright: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  content: [ArtifactAssessmentContent]
  workflowStatus: code  _workflowStatus: ElementBase
  disposition: code  _disposition: ElementBase
}

type ArtifactAssessmentRelatesTo {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  targetUri: uri  _targetUri: ElementBase
  targetAttachment: Attachment
  targetCanonical: canonical  _targetCanonical: ElementBase
  targetMarkdown: markdown  _targetMarkdown: ElementBase
}

type ArtifactAssessmentContent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  summary: markdown  _summary: ElementBase
  type: CodeableConcept
  classifier: [CodeableConcept]
  quantity: Quantity
  author: [Reference]
  path: [uri]  _path: [ElementBase]
  relatesTo: [ArtifactAssessmentRelatesTo]
  freeToShare: Boolean  _freeToShare: ElementBase
  component: [ArtifactAssessmentContent]
}

input ArtifactAssessmentInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  title: String  _title: ElementBaseInput
  citeAs: markdown  _citeAs: ElementBaseInput
  artifactReference: ReferenceInput
  artifactUri: uri  _artifactUri: ElementBaseInput
  relatesTo: [ArtifactAssessmentRelatesToInputInput]
  date: dateTime  _date: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  approvalDate: date  _approvalDate: ElementBaseInput
  lastReviewDate: date  _lastReviewDate: ElementBaseInput
  content: [ArtifactAssessmentContentInputInput]
  workflowStatus: code  _workflowStatus: ElementBaseInput
  disposition: code  _disposition: ElementBaseInput
}

input ArtifactAssessmentRelatesToInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: code  _type: ElementBaseInput
  targetUri: uri  _targetUri: ElementBaseInput
  targetAttachment: AttachmentInput
  targetCanonical: canonical  _targetCanonical: ElementBaseInput
  targetMarkdown: markdown  _targetMarkdown: ElementBaseInput
}

input ArtifactAssessmentContentInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  summary: markdown  _summary: ElementBaseInput
  type: CodeableConceptInput
  classifier: [CodeableConceptInput]
  quantity: QuantityInput
  author: [ReferenceInput]
  path: [uri]  _path: [ElementBaseInput]
  relatesTo: [ArtifactAssessmentRelatesToInputInput]
  freeToShare: Boolean  _freeToShare: ElementBaseInput
  component: [ArtifactAssessmentContentInputInput]
}

type ArtifactAssessmentReadType {
  ArtifactAssessment(id: ID!): ArtifactAssessment
}

type ArtifactAssessmentListType {
  ArtifactAssessmentList(_filter: String
    date: [date]
    identifier: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [ArtifactAssessment]
}

type ArtifactAssessmentConnectionType {
  ArtifactAssessmentConection(_filter: String
    date: [date]
    identifier: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): ArtifactAssessmentConnection
}

type ArtifactAssessmentConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [ArtifactAssessmentEdge]
}

type ArtifactAssessmentEdge {
  mode: String
  score: Float
  resource: ArtifactAssessment
}

type ArtifactAssessmentCreateType {
  ArtifactAssessmentCreate(resource: ArtifactAssessmentInput): ArtifactAssessmentCreation
}

type ArtifactAssessmentCreation {
  location: String
  resource: ArtifactAssessment
  information: OperationOutcome
}

type ArtifactAssessmentUpdateType {
  ArtifactAssessmentUpdate(id: ID, resource: ArtifactAssessmentInput): ArtifactAssessmentUpdate
}

type ArtifactAssessmentUpdate {
  resource: ArtifactAssessment
  information: OperationOutcome
}

type ArtifactAssessmentDeleteType {
  ArtifactAssessmentDelete(id: ID): ArtifactAssessmentDelete
}

type ArtifactAssessmentDelete {
  information: OperationOutcome
}

