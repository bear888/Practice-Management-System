# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IGroup implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  type: code  _type: ElementBase
  membership: code  _membership: ElementBase
  code: CodeableConcept
  quantity: unsignedInt  _quantity: ElementBase
  managingEntity: Reference
  combinationMethod: code  _combinationMethod: ElementBase
  combinationThreshold: positiveInt  _combinationThreshold: ElementBase
  characteristic: [GroupCharacteristic]
  member: [GroupMember]
}

type Group implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  type: code  _type: ElementBase
  membership: code  _membership: ElementBase
  code: CodeableConcept
  quantity: unsignedInt  _quantity: ElementBase
  managingEntity: Reference
  combinationMethod: code  _combinationMethod: ElementBase
  combinationThreshold: positiveInt  _combinationThreshold: ElementBase
  characteristic: [GroupCharacteristic]
  member: [GroupMember]
}

type GroupCharacteristic {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept!
  valueCodeableConcept: CodeableConcept
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueQuantity: Quantity
  valueRange: Range
  valueReference: Reference
  valueUri: uri  _valueUri: ElementBase
  valueExpression: Expression
  exclude: Boolean  _exclude: ElementBase
  description: markdown  _description: ElementBase
  method: [CodeableConcept]
  determinedByReference: Reference
  determinedByExpression: Expression
  offset: CodeableConcept
  instancesUnsignedInt: unsignedInt  _instancesUnsignedInt: ElementBase
  instancesRange: Range
  durationDuration: Duration
  durationRange: Range
  period: Period
  timing: [RelativeTime]
}

type GroupMember {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  entity: Reference!
  involvement: [CodeableConcept]
  period: Period
  inactive: Boolean  _inactive: ElementBase
}

input GroupInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  versionAlgorithmString: String  _versionAlgorithmString: ElementBaseInput
  versionAlgorithmCoding: CodingInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  date: dateTime  _date: ElementBaseInput
  publisher: String  _publisher: ElementBaseInput
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBaseInput
  useContext: [UsageContextInput]
  purpose: markdown  _purpose: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  copyrightLabel: String  _copyrightLabel: ElementBaseInput
  type: code  _type: ElementBaseInput
  membership: code  _membership: ElementBaseInput
  code: CodeableConceptInput
  quantity: unsignedInt  _quantity: ElementBaseInput
  managingEntity: ReferenceInput
  combinationMethod: code  _combinationMethod: ElementBaseInput
  combinationThreshold: positiveInt  _combinationThreshold: ElementBaseInput
  characteristic: [GroupCharacteristicInputInput]
  member: [GroupMemberInputInput]
}

input GroupCharacteristicInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: CodeableConceptInput!
  valueCodeableConcept: CodeableConceptInput
  valueBoolean: Boolean  _valueBoolean: ElementBaseInput
  valueQuantity: QuantityInput
  valueRange: RangeInput
  valueReference: ReferenceInput
  valueUri: uri  _valueUri: ElementBaseInput
  valueExpression: ExpressionInput
  exclude: Boolean  _exclude: ElementBaseInput
  description: markdown  _description: ElementBaseInput
  method: [CodeableConceptInput]
  determinedByReference: ReferenceInput
  determinedByExpression: ExpressionInput
  offset: CodeableConceptInput
  instancesUnsignedInt: unsignedInt  _instancesUnsignedInt: ElementBaseInput
  instancesRange: RangeInput
  durationDuration: DurationInput
  durationRange: RangeInput
  period: PeriodInput
  timing: [RelativeTimeInput]
}

input GroupMemberInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  entity: ReferenceInput!
  involvement: [CodeableConceptInput]
  period: PeriodInput
  inactive: Boolean  _inactive: ElementBaseInput
}

type GroupReadType {
  Group(id: ID!): Group
}

type GroupListType {
  GroupList(_filter: String
    characteristic: [token]
    characteristic_reference: [reference]
    characteristic_value: [composite]
    code: [token]
    exclude: [token]
    identifier: [token]
    managing_entity: [reference]
    member: [reference]
    membership: [token]
    name: [String]
    status: [token]
    type: [token]
    url: [uri]
    value: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [Group]
}

type GroupConnectionType {
  GroupConection(_filter: String
    characteristic: [token]
    characteristic_reference: [reference]
    characteristic_value: [composite]
    code: [token]
    exclude: [token]
    identifier: [token]
    managing_entity: [reference]
    member: [reference]
    membership: [token]
    name: [String]
    status: [token]
    type: [token]
    url: [uri]
    value: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): GroupConnection
}

type GroupConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [GroupEdge]
}

type GroupEdge {
  mode: String
  score: Float
  resource: Group
}

type GroupCreateType {
  GroupCreate(resource: GroupInput): GroupCreation
}

type GroupCreation {
  location: String
  resource: Group
  information: OperationOutcome
}

type GroupUpdateType {
  GroupUpdate(id: ID, resource: GroupInput): GroupUpdate
}

type GroupUpdate {
  resource: Group
  information: OperationOutcome
}

type GroupDeleteType {
  GroupDelete(id: ID): GroupDelete
}

type GroupDelete {
  information: OperationOutcome
}

