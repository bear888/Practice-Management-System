# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IComposition implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  status: code  _status: ElementBase
  type: CodeableConcept!
  category: [CodeableConcept]
  subject: [Reference]
  encounter: Reference
  date: dateTime  _date: ElementBase
  useContext: [UsageContext]
  author: [Reference]!
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  note: [Annotation]
  attester: [CompositionAttester]
  custodian: Reference
  relatesTo: [CompositionRelatesTo]
  event: [CompositionEvent]
  section: [CompositionSection]
}

type Composition implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  status: code  _status: ElementBase
  type: CodeableConcept!
  category: [CodeableConcept]
  subject: [Reference]
  encounter: Reference
  date: dateTime  _date: ElementBase
  useContext: [UsageContext]
  author: [Reference]!
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  note: [Annotation]
  attester: [CompositionAttester]
  custodian: Reference
  relatesTo: [CompositionRelatesTo]
  event: [CompositionEvent]
  section: [CompositionSection]
}

type CompositionAttester {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  mode: CodeableConcept!
  time: dateTime  _time: ElementBase
  party: Reference
}

type CompositionRelatesTo {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  targetUri: uri  _targetUri: ElementBase
  targetAttachment: Attachment
  targetCanonical: canonical  _targetCanonical: ElementBase
  targetMarkdown: markdown  _targetMarkdown: ElementBase
}

type CompositionEvent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  period: Period
  detail: [CodeableReference]
}

type CompositionSection {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  title: String  _title: ElementBase
  code: CodeableConcept
  author: [Reference]
  focus: Reference
  text: Narrative
  orderedBy: CodeableConcept
  entry: [Reference]
  emptyReason: CodeableConcept
  section: [CompositionSection]
}

input CompositionInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  status: code  _status: ElementBaseInput
  type: CodeableConceptInput!
  category: [CodeableConceptInput]
  subject: [ReferenceInput]
  encounter: ReferenceInput
  date: dateTime  _date: ElementBaseInput
  useContext: [UsageContextInput]
  author: [ReferenceInput]!
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  note: [AnnotationInput]
  attester: [CompositionAttesterInputInput]
  custodian: ReferenceInput
  relatesTo: [CompositionRelatesToInputInput]
  event: [CompositionEventInputInput]
  section: [CompositionSectionInputInput]
}

input CompositionAttesterInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  mode: CodeableConceptInput!
  time: dateTime  _time: ElementBaseInput
  party: ReferenceInput
}

input CompositionRelatesToInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: code  _type: ElementBaseInput
  targetUri: uri  _targetUri: ElementBaseInput
  targetAttachment: AttachmentInput
  targetCanonical: canonical  _targetCanonical: ElementBaseInput
  targetMarkdown: markdown  _targetMarkdown: ElementBaseInput
}

input CompositionEventInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  period: PeriodInput
  detail: [CodeableReferenceInput]
}

input CompositionSectionInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  title: String  _title: ElementBaseInput
  code: CodeableConceptInput
  author: [ReferenceInput]
  focus: ReferenceInput
  text: NarrativeInput
  orderedBy: CodeableConceptInput
  entry: [ReferenceInput]
  emptyReason: CodeableConceptInput
  section: [CompositionSectionInputInput]
}

type CompositionReadType {
  Composition(id: ID!): Composition
}

type CompositionListType {
  CompositionList(_filter: String
    attester: [reference]
    author: [reference]
    category: [token]
    date: [date]
    encounter: [reference]
    entry: [reference]
    event_code: [token]
    event_reference: [reference]
    identifier: [token]
    patient: [reference]
    period: [date]
    section: [token]
    section_code_text: [composite]
    section_text: [special]
    status: [token]
    subject: [reference]
    title: [String]
    type: [token]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [Composition]
}

type CompositionConnectionType {
  CompositionConection(_filter: String
    attester: [reference]
    author: [reference]
    category: [token]
    date: [date]
    encounter: [reference]
    entry: [reference]
    event_code: [token]
    event_reference: [reference]
    identifier: [token]
    patient: [reference]
    period: [date]
    section: [token]
    section_code_text: [composite]
    section_text: [special]
    status: [token]
    subject: [reference]
    title: [String]
    type: [token]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): CompositionConnection
}

type CompositionConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [CompositionEdge]
}

type CompositionEdge {
  mode: String
  score: Float
  resource: Composition
}

type CompositionCreateType {
  CompositionCreate(resource: CompositionInput): CompositionCreation
}

type CompositionCreation {
  location: String
  resource: Composition
  information: OperationOutcome
}

type CompositionUpdateType {
  CompositionUpdate(id: ID, resource: CompositionInput): CompositionUpdate
}

type CompositionUpdate {
  resource: Composition
  information: OperationOutcome
}

type CompositionDeleteType {
  CompositionDelete(id: ID): CompositionDelete
}

type CompositionDelete {
  information: OperationOutcome
}

