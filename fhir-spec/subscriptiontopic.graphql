# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface ISubscriptionTopic implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  derivedFrom: [canonical]  _derivedFrom: [ElementBase]
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  trigger: [SubscriptionTopicTrigger]
}

type SubscriptionTopic implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  derivedFrom: [canonical]  _derivedFrom: [ElementBase]
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  trigger: [SubscriptionTopicTrigger]
}

type SubscriptionTopicTrigger {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: markdown  _description: ElementBase
  resource: uri  _resource: ElementBase
  supportedInteraction: [code]  _supportedInteraction: [ElementBase]
  queryCriteria: SubscriptionTopicTriggerQueryCriteria
  fhirPathCriteria: String  _fhirPathCriteria: ElementBase
  event: CodeableConcept
  canFilterBy: [SubscriptionTopicTriggerCanFilterBy]
  notificationShape: [SubscriptionTopicTriggerNotificationShape]
}

type SubscriptionTopicTriggerQueryCriteria {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  previous: String  _previous: ElementBase
  resultForCreate: code  _resultForCreate: ElementBase
  current: String  _current: ElementBase
  resultForDelete: code  _resultForDelete: ElementBase
  requireBoth: Boolean  _requireBoth: ElementBase
}

type SubscriptionTopicTriggerCanFilterBy {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  description: markdown  _description: ElementBase
  resource: uri  _resource: ElementBase
  filterParameter: String  _filterParameter: ElementBase
  filterDefinition: uri  _filterDefinition: ElementBase
  comparator: [code]  _comparator: [ElementBase]
  modifier: [code]  _modifier: [ElementBase]
}

type SubscriptionTopicTriggerNotificationShape {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  resource: uri  _resource: ElementBase
  include: [String]  _include: [ElementBase]
  revInclude: [String]  _revInclude: [ElementBase]
  relatedQuery: [SubscriptionTopicTriggerNotificationShapeRelatedQuery]
}

type SubscriptionTopicTriggerNotificationShapeRelatedQuery {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  queryType: Coding
  query: String  _query: ElementBase
}

input SubscriptionTopicInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  versionAlgorithmString: String  _versionAlgorithmString: ElementBaseInput
  versionAlgorithmCoding: CodingInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  derivedFrom: [canonical]  _derivedFrom: [ElementBaseInput]
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  date: dateTime  _date: ElementBaseInput
  publisher: String  _publisher: ElementBaseInput
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBaseInput
  useContext: [UsageContextInput]
  jurisdiction: [CodeableConceptInput]
  purpose: markdown  _purpose: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  copyrightLabel: String  _copyrightLabel: ElementBaseInput
  approvalDate: date  _approvalDate: ElementBaseInput
  lastReviewDate: date  _lastReviewDate: ElementBaseInput
  effectivePeriod: PeriodInput
  trigger: [SubscriptionTopicTriggerInputInput]
}

input SubscriptionTopicTriggerInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: markdown  _description: ElementBaseInput
  resource: uri  _resource: ElementBaseInput
  supportedInteraction: [code]  _supportedInteraction: [ElementBaseInput]
  queryCriteria: SubscriptionTopicTriggerInputQueryCriteriaInputInput
  fhirPathCriteria: String  _fhirPathCriteria: ElementBaseInput
  event: CodeableConceptInput
  canFilterBy: [SubscriptionTopicTriggerInputCanFilterByInputInput]
  notificationShape: [SubscriptionTopicTriggerInputNotificationShapeInputInput]
}

input SubscriptionTopicTriggerInputQueryCriteriaInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  previous: String  _previous: ElementBaseInput
  resultForCreate: code  _resultForCreate: ElementBaseInput
  current: String  _current: ElementBaseInput
  resultForDelete: code  _resultForDelete: ElementBaseInput
  requireBoth: Boolean  _requireBoth: ElementBaseInput
}

input SubscriptionTopicTriggerInputCanFilterByInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  description: markdown  _description: ElementBaseInput
  resource: uri  _resource: ElementBaseInput
  filterParameter: String  _filterParameter: ElementBaseInput
  filterDefinition: uri  _filterDefinition: ElementBaseInput
  comparator: [code]  _comparator: [ElementBaseInput]
  modifier: [code]  _modifier: [ElementBaseInput]
}

input SubscriptionTopicTriggerInputNotificationShapeInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  resource: uri  _resource: ElementBaseInput
  include: [String]  _include: [ElementBaseInput]
  revInclude: [String]  _revInclude: [ElementBaseInput]
  relatedQuery: [SubscriptionTopicTriggerInputNotificationShapeInputRelatedQueryInputInput]
}

input SubscriptionTopicTriggerInputNotificationShapeInputRelatedQueryInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  queryType: CodingInput
  query: String  _query: ElementBaseInput
}

type SubscriptionTopicReadType {
  SubscriptionTopic(id: ID!): SubscriptionTopic
}

type SubscriptionTopicListType {
  SubscriptionTopicList(_filter: String
    date: [date]
    derived_or_self: [uri]
    effective: [date]
    event: [token]
    identifier: [token]
    resource: [uri]
    status: [token]
    title: [String]
    trigger_description: [String]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [SubscriptionTopic]
}

type SubscriptionTopicConnectionType {
  SubscriptionTopicConection(_filter: String
    date: [date]
    derived_or_self: [uri]
    effective: [date]
    event: [token]
    identifier: [token]
    resource: [uri]
    status: [token]
    title: [String]
    trigger_description: [String]
    url: [uri]
    version: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): SubscriptionTopicConnection
}

type SubscriptionTopicConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [SubscriptionTopicEdge]
}

type SubscriptionTopicEdge {
  mode: String
  score: Float
  resource: SubscriptionTopic
}

type SubscriptionTopicCreateType {
  SubscriptionTopicCreate(resource: SubscriptionTopicInput): SubscriptionTopicCreation
}

type SubscriptionTopicCreation {
  location: String
  resource: SubscriptionTopic
  information: OperationOutcome
}

type SubscriptionTopicUpdateType {
  SubscriptionTopicUpdate(id: ID, resource: SubscriptionTopicInput): SubscriptionTopicUpdate
}

type SubscriptionTopicUpdate {
  resource: SubscriptionTopic
  information: OperationOutcome
}

type SubscriptionTopicDeleteType {
  SubscriptionTopicDelete(id: ID): SubscriptionTopicDelete
}

type SubscriptionTopicDelete {
  information: OperationOutcome
}

