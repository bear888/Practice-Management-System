# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IDeviceDefinition implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  partNumber: String  _partNumber: ElementBase
  manufacturer: Reference
  modelNumber: String  _modelNumber: ElementBase
  date: dateTime  _date: ElementBase
  contact: [ContactDetail]
  publisher: String  _publisher: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  udiDeviceIdentifier: [DeviceDefinitionUdiDeviceIdentifier]
  regulatoryIdentifier: [DeviceDefinitionRegulatoryIdentifier]
  deviceName: [DeviceDefinitionDeviceName]
  classification: [DeviceDefinitionClassification]
  conformsTo: [DeviceDefinitionConformsTo]
  hasPart: [DeviceDefinitionHasPart]
  packaging: [DeviceDefinitionPackaging]
  deviceVersion: [DeviceDefinitionDeviceVersion]
  safety: [CodeableConcept]
  shelfLifeStorage: [ProductShelfLife]
  outputLanguage: [code]  _outputLanguage: [ElementBase]
  property: [DeviceDefinitionProperty]
  link: [DeviceDefinitionLink]
  note: [Annotation]
  material: [DeviceDefinitionMaterial]
  productionIdentifierInUDI: [CodeableConcept]
  guideline: DeviceDefinitionGuideline
  correctiveAction: DeviceDefinitionCorrectiveAction
  chargeItem: [DeviceDefinitionChargeItem]
}

type DeviceDefinition implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  partNumber: String  _partNumber: ElementBase
  manufacturer: Reference
  modelNumber: String  _modelNumber: ElementBase
  date: dateTime  _date: ElementBase
  contact: [ContactDetail]
  publisher: String  _publisher: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  udiDeviceIdentifier: [DeviceDefinitionUdiDeviceIdentifier]
  regulatoryIdentifier: [DeviceDefinitionRegulatoryIdentifier]
  deviceName: [DeviceDefinitionDeviceName]
  classification: [DeviceDefinitionClassification]
  conformsTo: [DeviceDefinitionConformsTo]
  hasPart: [DeviceDefinitionHasPart]
  packaging: [DeviceDefinitionPackaging]
  deviceVersion: [DeviceDefinitionDeviceVersion]
  safety: [CodeableConcept]
  shelfLifeStorage: [ProductShelfLife]
  outputLanguage: [code]  _outputLanguage: [ElementBase]
  property: [DeviceDefinitionProperty]
  link: [DeviceDefinitionLink]
  note: [Annotation]
  material: [DeviceDefinitionMaterial]
  productionIdentifierInUDI: [CodeableConcept]
  guideline: DeviceDefinitionGuideline
  correctiveAction: DeviceDefinitionCorrectiveAction
  chargeItem: [DeviceDefinitionChargeItem]
}

type DeviceDefinitionUdiDeviceIdentifier {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  deviceIdentifier: String  _deviceIdentifier: ElementBase
  issuer: uri  _issuer: ElementBase
  jurisdiction: uri  _jurisdiction: ElementBase
  marketDistribution: [DeviceDefinitionUdiDeviceIdentifierMarketDistribution]
  deviceIdentifierSystem: uri  _deviceIdentifierSystem: ElementBase
}

type DeviceDefinitionUdiDeviceIdentifierMarketDistribution {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  marketPeriod: Period!
  subJurisdiction: uri  _subJurisdiction: ElementBase
}

type DeviceDefinitionRegulatoryIdentifier {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: code  _type: ElementBase
  deviceIdentifier: String  _deviceIdentifier: ElementBase
  issuer: uri  _issuer: ElementBase
  jurisdiction: uri  _jurisdiction: ElementBase
  deviceIdentifierSystem: uri  _deviceIdentifierSystem: ElementBase
}

type DeviceDefinitionDeviceName {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: String  _name: ElementBase
  type: CodeableConcept!
}

type DeviceDefinitionClassification {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  justification: [RelatedArtifact]
}

type DeviceDefinitionConformsTo {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  category: CodeableConcept
  specification: CodeableConcept!
  version: [String]  _version: [ElementBase]
  source: [RelatedArtifact]
}

type DeviceDefinitionHasPart {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  reference: Reference!
  count: Int  _count: ElementBase
}

type DeviceDefinitionPackaging {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: Identifier
  type: CodeableConcept
  count: Int  _count: ElementBase
  distributor: [DeviceDefinitionPackagingDistributor]
  udiDeviceIdentifier: [DeviceDefinitionUdiDeviceIdentifier]
  packaging: [DeviceDefinitionPackaging]
}

type DeviceDefinitionPackagingDistributor {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  name: String  _name: ElementBase
  organizationReference: [Reference]
}

type DeviceDefinitionDeviceVersion {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  component: Identifier
  value: String  _value: ElementBase
}

type DeviceDefinitionProperty {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  valueQuantity: Quantity
  valueCodeableConcept: CodeableConcept
  valueString: String  _valueString: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueRange: Range
  valueAttachment: Attachment
}

type DeviceDefinitionLink {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  relation: Coding!
  relatedDevice: CodeableReference!
}

type DeviceDefinitionMaterial {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  substance: CodeableConcept!
  alternate: Boolean  _alternate: ElementBase
  allergenicIndicator: Boolean  _allergenicIndicator: ElementBase
}

type DeviceDefinitionGuideline {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  useContext: [UsageContext]
  usageInstruction: markdown  _usageInstruction: ElementBase
  relatedArtifact: [RelatedArtifact]
  indication: [CodeableConcept]
  contraindication: [CodeableConcept]
  warning: [CodeableConcept]
  intendedUse: String  _intendedUse: ElementBase
}

type DeviceDefinitionCorrectiveAction {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  recall: Boolean  _recall: ElementBase
  scope: code  _scope: ElementBase
  period: Period!
}

type DeviceDefinitionChargeItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  chargeItemCode: CodeableReference!
  count: Quantity!
  effectivePeriod: Period
  useContext: [UsageContext]
}

input DeviceDefinitionInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  versionAlgorithmString: String  _versionAlgorithmString: ElementBaseInput
  versionAlgorithmCoding: CodingInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  partNumber: String  _partNumber: ElementBaseInput
  manufacturer: ReferenceInput
  modelNumber: String  _modelNumber: ElementBaseInput
  date: dateTime  _date: ElementBaseInput
  contact: [ContactDetailInput]
  publisher: String  _publisher: ElementBaseInput
  useContext: [UsageContextInput]
  jurisdiction: [CodeableConceptInput]
  purpose: markdown  _purpose: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  copyrightLabel: String  _copyrightLabel: ElementBaseInput
  udiDeviceIdentifier: [DeviceDefinitionUdiDeviceIdentifierInputInput]
  regulatoryIdentifier: [DeviceDefinitionRegulatoryIdentifierInputInput]
  deviceName: [DeviceDefinitionDeviceNameInputInput]
  classification: [DeviceDefinitionClassificationInputInput]
  conformsTo: [DeviceDefinitionConformsToInputInput]
  hasPart: [DeviceDefinitionHasPartInputInput]
  packaging: [DeviceDefinitionPackagingInputInput]
  deviceVersion: [DeviceDefinitionDeviceVersionInputInput]
  safety: [CodeableConceptInput]
  shelfLifeStorage: [ProductShelfLifeInput]
  outputLanguage: [code]  _outputLanguage: [ElementBaseInput]
  property: [DeviceDefinitionPropertyInputInput]
  link: [DeviceDefinitionLinkInputInput]
  note: [AnnotationInput]
  material: [DeviceDefinitionMaterialInputInput]
  productionIdentifierInUDI: [CodeableConceptInput]
  guideline: DeviceDefinitionGuidelineInputInput
  correctiveAction: DeviceDefinitionCorrectiveActionInputInput
  chargeItem: [DeviceDefinitionChargeItemInputInput]
}

input DeviceDefinitionUdiDeviceIdentifierInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  deviceIdentifier: String  _deviceIdentifier: ElementBaseInput
  issuer: uri  _issuer: ElementBaseInput
  jurisdiction: uri  _jurisdiction: ElementBaseInput
  marketDistribution: [DeviceDefinitionUdiDeviceIdentifierInputMarketDistributionInputInput]
  deviceIdentifierSystem: uri  _deviceIdentifierSystem: ElementBaseInput
}

input DeviceDefinitionUdiDeviceIdentifierInputMarketDistributionInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  marketPeriod: PeriodInput!
  subJurisdiction: uri  _subJurisdiction: ElementBaseInput
}

input DeviceDefinitionRegulatoryIdentifierInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: code  _type: ElementBaseInput
  deviceIdentifier: String  _deviceIdentifier: ElementBaseInput
  issuer: uri  _issuer: ElementBaseInput
  jurisdiction: uri  _jurisdiction: ElementBaseInput
  deviceIdentifierSystem: uri  _deviceIdentifierSystem: ElementBaseInput
}

input DeviceDefinitionDeviceNameInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: String  _name: ElementBaseInput
  type: CodeableConceptInput!
}

input DeviceDefinitionClassificationInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  justification: [RelatedArtifactInput]
}

input DeviceDefinitionConformsToInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  category: CodeableConceptInput
  specification: CodeableConceptInput!
  version: [String]  _version: [ElementBaseInput]
  source: [RelatedArtifactInput]
}

input DeviceDefinitionHasPartInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  reference: ReferenceInput!
  count: Int  _count: ElementBaseInput
}

input DeviceDefinitionPackagingInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: IdentifierInput
  type: CodeableConceptInput
  count: Int  _count: ElementBaseInput
  distributor: [DeviceDefinitionPackagingInputDistributorInputInput]
  udiDeviceIdentifier: [DeviceDefinitionUdiDeviceIdentifierInputInput]
  packaging: [DeviceDefinitionPackagingInputInput]
}

input DeviceDefinitionPackagingInputDistributorInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  name: String  _name: ElementBaseInput
  organizationReference: [ReferenceInput]
}

input DeviceDefinitionDeviceVersionInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  component: IdentifierInput
  value: String  _value: ElementBaseInput
}

input DeviceDefinitionPropertyInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  valueQuantity: QuantityInput
  valueCodeableConcept: CodeableConceptInput
  valueString: String  _valueString: ElementBaseInput
  valueBoolean: Boolean  _valueBoolean: ElementBaseInput
  valueInteger: Int  _valueInteger: ElementBaseInput
  valueRange: RangeInput
  valueAttachment: AttachmentInput
}

input DeviceDefinitionLinkInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  relation: CodingInput!
  relatedDevice: CodeableReferenceInput!
}

input DeviceDefinitionMaterialInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  substance: CodeableConceptInput!
  alternate: Boolean  _alternate: ElementBaseInput
  allergenicIndicator: Boolean  _allergenicIndicator: ElementBaseInput
}

input DeviceDefinitionGuidelineInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  useContext: [UsageContextInput]
  usageInstruction: markdown  _usageInstruction: ElementBaseInput
  relatedArtifact: [RelatedArtifactInput]
  indication: [CodeableConceptInput]
  contraindication: [CodeableConceptInput]
  warning: [CodeableConceptInput]
  intendedUse: String  _intendedUse: ElementBaseInput
}

input DeviceDefinitionCorrectiveActionInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  recall: Boolean  _recall: ElementBaseInput
  scope: code  _scope: ElementBaseInput
  period: PeriodInput!
}

input DeviceDefinitionChargeItemInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  chargeItemCode: CodeableReferenceInput!
  count: QuantityInput!
  effectivePeriod: PeriodInput
  useContext: [UsageContextInput]
}

type DeviceDefinitionReadType {
  DeviceDefinition(id: ID!): DeviceDefinition
}

type DeviceDefinitionListType {
  DeviceDefinitionList(_filter: String
    conforms_to_category: [token]
    device_name: [String]
    has_part: [reference]
    identifier: [token]
    manufacturer: [reference]
    model_number: [token]
    part_number: [String]
    publisher: [String]
    specification: [token]
    specification_version: [composite]
    type: [token]
    url: [uri]
    version: [token]
    version_type: [composite]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [DeviceDefinition]
}

type DeviceDefinitionConnectionType {
  DeviceDefinitionConection(_filter: String
    conforms_to_category: [token]
    device_name: [String]
    has_part: [reference]
    identifier: [token]
    manufacturer: [reference]
    model_number: [token]
    part_number: [String]
    publisher: [String]
    specification: [token]
    specification_version: [composite]
    type: [token]
    url: [uri]
    version: [token]
    version_type: [composite]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): DeviceDefinitionConnection
}

type DeviceDefinitionConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [DeviceDefinitionEdge]
}

type DeviceDefinitionEdge {
  mode: String
  score: Float
  resource: DeviceDefinition
}

type DeviceDefinitionCreateType {
  DeviceDefinitionCreate(resource: DeviceDefinitionInput): DeviceDefinitionCreation
}

type DeviceDefinitionCreation {
  location: String
  resource: DeviceDefinition
  information: OperationOutcome
}

type DeviceDefinitionUpdateType {
  DeviceDefinitionUpdate(id: ID, resource: DeviceDefinitionInput): DeviceDefinitionUpdate
}

type DeviceDefinitionUpdate {
  resource: DeviceDefinition
  information: OperationOutcome
}

type DeviceDefinitionDeleteType {
  DeviceDefinitionDelete(id: ID): DeviceDefinitionDelete
}

type DeviceDefinitionDelete {
  information: OperationOutcome
}

