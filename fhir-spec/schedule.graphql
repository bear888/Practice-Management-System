# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface ISchedule implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableReference]
  specialty: [CodeableConcept]
  name: String  _name: ElementBase
  actor: [Reference]!
  planningHorizon: Period
  comment: markdown  _comment: ElementBase
}

type Schedule implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableReference]
  specialty: [CodeableConcept]
  name: String  _name: ElementBase
  actor: [Reference]!
  planningHorizon: Period
  comment: markdown  _comment: ElementBase
}

input ScheduleInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  active: Boolean  _active: ElementBaseInput
  serviceCategory: [CodeableConceptInput]
  serviceType: [CodeableReferenceInput]
  specialty: [CodeableConceptInput]
  name: String  _name: ElementBaseInput
  actor: [ReferenceInput]!
  planningHorizon: PeriodInput
  comment: markdown  _comment: ElementBaseInput
}

type ScheduleReadType {
  Schedule(id: ID!): Schedule
}

type ScheduleListType {
  ScheduleList(_filter: String
    active: [token]
    actor: [reference]
    date: [date]
    identifier: [token]
    name: [String]
    service_category: [token]
    service_type: [token]
    service_type_reference: [reference]
    specialty: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [Schedule]
}

type ScheduleConnectionType {
  ScheduleConection(_filter: String
    active: [token]
    actor: [reference]
    date: [date]
    identifier: [token]
    name: [String]
    service_category: [token]
    service_type: [token]
    service_type_reference: [reference]
    specialty: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): ScheduleConnection
}

type ScheduleConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [ScheduleEdge]
}

type ScheduleEdge {
  mode: String
  score: Float
  resource: Schedule
}

type ScheduleCreateType {
  ScheduleCreate(resource: ScheduleInput): ScheduleCreation
}

type ScheduleCreation {
  location: String
  resource: Schedule
  information: OperationOutcome
}

type ScheduleUpdateType {
  ScheduleUpdate(id: ID, resource: ScheduleInput): ScheduleUpdate
}

type ScheduleUpdate {
  resource: Schedule
  information: OperationOutcome
}

type ScheduleDeleteType {
  ScheduleDelete(id: ID): ScheduleDelete
}

type ScheduleDelete {
  information: OperationOutcome
}

