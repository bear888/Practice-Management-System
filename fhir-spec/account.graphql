# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IAccount implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  billingStatus: CodeableConcept
  type: CodeableConcept
  name: String  _name: ElementBase
  subject: [Reference]
  servicePeriod: Period
  covers: [Reference]
  coverage: [AccountCoverage]
  owner: Reference
  description: markdown  _description: ElementBase
  guarantor: [AccountGuarantor]
  diagnosis: [AccountDiagnosis]
  procedure: [AccountProcedure]
  parent: Reference
  currency: CodeableConcept
  balance: [AccountBalance]
  calculatedAt: instant  _calculatedAt: ElementBase
}

type Account implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  billingStatus: CodeableConcept
  type: CodeableConcept
  name: String  _name: ElementBase
  subject: [Reference]
  servicePeriod: Period
  covers: [Reference]
  coverage: [AccountCoverage]
  owner: Reference
  description: markdown  _description: ElementBase
  guarantor: [AccountGuarantor]
  diagnosis: [AccountDiagnosis]
  procedure: [AccountProcedure]
  parent: Reference
  currency: CodeableConcept
  balance: [AccountBalance]
  calculatedAt: instant  _calculatedAt: ElementBase
}

type AccountCoverage {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  coverage: Reference!
  priority: positiveInt  _priority: ElementBase
}

type AccountGuarantor {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  party: Reference
  onHold: Boolean  _onHold: ElementBase
  period: Period
  account: Reference
}

type AccountDiagnosis {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  condition: CodeableReference!
  dateOfDiagnosis: dateTime  _dateOfDiagnosis: ElementBase
  type: [CodeableConcept]
  onAdmission: Boolean  _onAdmission: ElementBase
  packageCode: [CodeableConcept]
}

type AccountProcedure {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  sequence: positiveInt  _sequence: ElementBase
  code: CodeableReference!
  dateOfService: dateTime  _dateOfService: ElementBase
  type: [CodeableConcept]
  packageCode: [CodeableConcept]
  device: [Reference]
}

type AccountBalance {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  aggregate: CodeableConcept
  term: CodeableConcept
  estimate: Boolean  _estimate: ElementBase
  amount: Money!
}

input AccountInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  status: code  _status: ElementBaseInput
  billingStatus: CodeableConceptInput
  type: CodeableConceptInput
  name: String  _name: ElementBaseInput
  subject: [ReferenceInput]
  servicePeriod: PeriodInput
  covers: [ReferenceInput]
  coverage: [AccountCoverageInputInput]
  owner: ReferenceInput
  description: markdown  _description: ElementBaseInput
  guarantor: [AccountGuarantorInputInput]
  diagnosis: [AccountDiagnosisInputInput]
  procedure: [AccountProcedureInputInput]
  parent: ReferenceInput
  currency: CodeableConceptInput
  balance: [AccountBalanceInputInput]
  calculatedAt: instant  _calculatedAt: ElementBaseInput
}

input AccountCoverageInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  coverage: ReferenceInput!
  priority: positiveInt  _priority: ElementBaseInput
}

input AccountGuarantorInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  party: ReferenceInput
  onHold: Boolean  _onHold: ElementBaseInput
  period: PeriodInput
  account: ReferenceInput
}

input AccountDiagnosisInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  condition: CodeableReferenceInput!
  dateOfDiagnosis: dateTime  _dateOfDiagnosis: ElementBaseInput
  type: [CodeableConceptInput]
  onAdmission: Boolean  _onAdmission: ElementBaseInput
  packageCode: [CodeableConceptInput]
}

input AccountProcedureInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  sequence: positiveInt  _sequence: ElementBaseInput
  code: CodeableReferenceInput!
  dateOfService: dateTime  _dateOfService: ElementBaseInput
  type: [CodeableConceptInput]
  packageCode: [CodeableConceptInput]
  device: [ReferenceInput]
}

input AccountBalanceInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  aggregate: CodeableConceptInput
  term: CodeableConceptInput
  estimate: Boolean  _estimate: ElementBaseInput
  amount: MoneyInput!
}

type AccountReadType {
  Account(id: ID!): Account
}

type AccountListType {
  AccountList(_filter: String
    guarantor: [reference]
    guarantor_account: [reference]
    identifier: [token]
    name: [String]
    owner: [reference]
    patient: [reference]
    period: [date]
    status: [token]
    subject: [reference]
    type: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [Account]
}

type AccountConnectionType {
  AccountConection(_filter: String
    guarantor: [reference]
    guarantor_account: [reference]
    identifier: [token]
    name: [String]
    owner: [reference]
    patient: [reference]
    period: [date]
    status: [token]
    subject: [reference]
    type: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): AccountConnection
}

type AccountConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [AccountEdge]
}

type AccountEdge {
  mode: String
  score: Float
  resource: Account
}

type AccountCreateType {
  AccountCreate(resource: AccountInput): AccountCreation
}

type AccountCreation {
  location: String
  resource: Account
  information: OperationOutcome
}

type AccountUpdateType {
  AccountUpdate(id: ID, resource: AccountInput): AccountUpdate
}

type AccountUpdate {
  resource: Account
  information: OperationOutcome
}

type AccountDeleteType {
  AccountDelete(id: ID): AccountDelete
}

type AccountDelete {
  information: OperationOutcome
}

