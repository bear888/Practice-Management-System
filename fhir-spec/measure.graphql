# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IMeasure implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  subtitle: String  _subtitle: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  basis: code  _basis: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  usage: markdown  _usage: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  reportingFrequency: Quantity
  topic: [CodeableConcept]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatedArtifact: [RelatedArtifact]
  library: [canonical]  _library: [ElementBase]
  disclaimer: markdown  _disclaimer: ElementBase
  scoring: CodeableConcept
  scoringUnit: CodeableConcept
  scoringPrecision: positiveInt  _scoringPrecision: ElementBase
  compositeScoring: CodeableConcept
  type: [CodeableConcept]
  riskAdjustment: markdown  _riskAdjustment: ElementBase
  rateAggregation: markdown  _rateAggregation: ElementBase
  rationale: markdown  _rationale: ElementBase
  clinicalRecommendationStatement: markdown  _clinicalRecommendationStatement: ElementBase
  improvementNotation: CodeableConcept
  improvementNotationGuidance: markdown  _improvementNotationGuidance: ElementBase
  term: [MeasureTerm]
  guidance: markdown  _guidance: ElementBase
  group: [MeasureGroup]
  supplementalData: [MeasureSupplementalData]
}

type Measure implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  url: uri  _url: ElementBase
  identifier: [Identifier]
  version: String  _version: ElementBase
  versionAlgorithmString: String  _versionAlgorithmString: ElementBase
  versionAlgorithmCoding: Coding
  name: String  _name: ElementBase
  title: String  _title: ElementBase
  subtitle: String  _subtitle: ElementBase
  status: code  _status: ElementBase
  experimental: Boolean  _experimental: ElementBase
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  basis: code  _basis: ElementBase
  date: dateTime  _date: ElementBase
  publisher: String  _publisher: ElementBase
  contact: [ContactDetail]
  description: markdown  _description: ElementBase
  useContext: [UsageContext]
  jurisdiction: [CodeableConcept]
  purpose: markdown  _purpose: ElementBase
  usage: markdown  _usage: ElementBase
  copyright: markdown  _copyright: ElementBase
  copyrightLabel: String  _copyrightLabel: ElementBase
  approvalDate: date  _approvalDate: ElementBase
  lastReviewDate: date  _lastReviewDate: ElementBase
  effectivePeriod: Period
  reportingFrequency: Quantity
  topic: [CodeableConcept]
  author: [ContactDetail]
  editor: [ContactDetail]
  reviewer: [ContactDetail]
  endorser: [ContactDetail]
  relatedArtifact: [RelatedArtifact]
  library: [canonical]  _library: [ElementBase]
  disclaimer: markdown  _disclaimer: ElementBase
  scoring: CodeableConcept
  scoringUnit: CodeableConcept
  scoringPrecision: positiveInt  _scoringPrecision: ElementBase
  compositeScoring: CodeableConcept
  type: [CodeableConcept]
  riskAdjustment: markdown  _riskAdjustment: ElementBase
  rateAggregation: markdown  _rateAggregation: ElementBase
  rationale: markdown  _rationale: ElementBase
  clinicalRecommendationStatement: markdown  _clinicalRecommendationStatement: ElementBase
  improvementNotation: CodeableConcept
  improvementNotationGuidance: markdown  _improvementNotationGuidance: ElementBase
  term: [MeasureTerm]
  guidance: markdown  _guidance: ElementBase
  group: [MeasureGroup]
  supplementalData: [MeasureSupplementalData]
}

type MeasureTerm {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  definition: markdown  _definition: ElementBase
}

type MeasureGroup {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  code: CodeableConcept
  description: markdown  _description: ElementBase
  type: [CodeableConcept]
  subjectCodeableConcept: CodeableConcept
  subjectReference: Reference
  basis: code  _basis: ElementBase
  scoring: CodeableConcept
  scoringUnit: CodeableConcept
  scoringPrecision: positiveInt  _scoringPrecision: ElementBase
  compositeScoring: CodeableConcept
  component: [MeasureGroupComponent]
  rateAggregation: markdown  _rateAggregation: ElementBase
  improvementNotation: CodeableConcept
  improvementNotationGuidance: markdown  _improvementNotationGuidance: ElementBase
  library: [canonical]  _library: [ElementBase]
  population: [MeasureGroupPopulation]
  stratifier: [MeasureGroupStratifier]
}

type MeasureGroupComponent {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  measure: canonical  _measure: ElementBase
  groupId: String  _groupId: ElementBase
  weight: decimal  _weight: ElementBase
}

type MeasureGroupPopulation {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  code: CodeableConcept
  description: markdown  _description: ElementBase
  criteria: Expression
  groupDefinition: Reference
  inputPopulationId: String  _inputPopulationId: ElementBase
  aggregateMethod: CodeableConcept
}

type MeasureGroupStratifier {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  code: CodeableConcept
  description: markdown  _description: ElementBase
  criteria: Expression
  groupDefinition: Reference
  valueSet: canonical  _valueSet: ElementBase
  unit: String  _unit: ElementBase
  component: [MeasureGroupComponent]
}

type MeasureSupplementalData {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  linkId: String  _linkId: ElementBase
  code: CodeableConcept
  usage: [CodeableConcept]
  description: markdown  _description: ElementBase
  criteria: Expression!
  valueSet: canonical  _valueSet: ElementBase
  unit: String  _unit: ElementBase
}

input MeasureInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  url: uri  _url: ElementBaseInput
  identifier: [IdentifierInput]
  version: String  _version: ElementBaseInput
  versionAlgorithmString: String  _versionAlgorithmString: ElementBaseInput
  versionAlgorithmCoding: CodingInput
  name: String  _name: ElementBaseInput
  title: String  _title: ElementBaseInput
  subtitle: String  _subtitle: ElementBaseInput
  status: code  _status: ElementBaseInput
  experimental: Boolean  _experimental: ElementBaseInput
  subjectCodeableConcept: CodeableConceptInput
  subjectReference: ReferenceInput
  basis: code  _basis: ElementBaseInput
  date: dateTime  _date: ElementBaseInput
  publisher: String  _publisher: ElementBaseInput
  contact: [ContactDetailInput]
  description: markdown  _description: ElementBaseInput
  useContext: [UsageContextInput]
  jurisdiction: [CodeableConceptInput]
  purpose: markdown  _purpose: ElementBaseInput
  usage: markdown  _usage: ElementBaseInput
  copyright: markdown  _copyright: ElementBaseInput
  copyrightLabel: String  _copyrightLabel: ElementBaseInput
  approvalDate: date  _approvalDate: ElementBaseInput
  lastReviewDate: date  _lastReviewDate: ElementBaseInput
  effectivePeriod: PeriodInput
  reportingFrequency: QuantityInput
  topic: [CodeableConceptInput]
  author: [ContactDetailInput]
  editor: [ContactDetailInput]
  reviewer: [ContactDetailInput]
  endorser: [ContactDetailInput]
  relatedArtifact: [RelatedArtifactInput]
  library: [canonical]  _library: [ElementBaseInput]
  disclaimer: markdown  _disclaimer: ElementBaseInput
  scoring: CodeableConceptInput
  scoringUnit: CodeableConceptInput
  scoringPrecision: positiveInt  _scoringPrecision: ElementBaseInput
  compositeScoring: CodeableConceptInput
  type: [CodeableConceptInput]
  riskAdjustment: markdown  _riskAdjustment: ElementBaseInput
  rateAggregation: markdown  _rateAggregation: ElementBaseInput
  rationale: markdown  _rationale: ElementBaseInput
  clinicalRecommendationStatement: markdown  _clinicalRecommendationStatement: ElementBaseInput
  improvementNotation: CodeableConceptInput
  improvementNotationGuidance: markdown  _improvementNotationGuidance: ElementBaseInput
  term: [MeasureTermInputInput]
  guidance: markdown  _guidance: ElementBaseInput
  group: [MeasureGroupInputInput]
  supplementalData: [MeasureSupplementalDataInputInput]
}

input MeasureTermInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: CodeableConceptInput
  definition: markdown  _definition: ElementBaseInput
}

input MeasureGroupInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  linkId: String  _linkId: ElementBaseInput
  code: CodeableConceptInput
  description: markdown  _description: ElementBaseInput
  type: [CodeableConceptInput]
  subjectCodeableConcept: CodeableConceptInput
  subjectReference: ReferenceInput
  basis: code  _basis: ElementBaseInput
  scoring: CodeableConceptInput
  scoringUnit: CodeableConceptInput
  scoringPrecision: positiveInt  _scoringPrecision: ElementBaseInput
  compositeScoring: CodeableConceptInput
  component: [MeasureGroupInputComponentInputInput]
  rateAggregation: markdown  _rateAggregation: ElementBaseInput
  improvementNotation: CodeableConceptInput
  improvementNotationGuidance: markdown  _improvementNotationGuidance: ElementBaseInput
  library: [canonical]  _library: [ElementBaseInput]
  population: [MeasureGroupInputPopulationInputInput]
  stratifier: [MeasureGroupInputStratifierInputInput]
}

input MeasureGroupInputComponentInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  measure: canonical  _measure: ElementBaseInput
  groupId: String  _groupId: ElementBaseInput
  weight: decimal  _weight: ElementBaseInput
}

input MeasureGroupInputPopulationInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  linkId: String  _linkId: ElementBaseInput
  code: CodeableConceptInput
  description: markdown  _description: ElementBaseInput
  criteria: ExpressionInput
  groupDefinition: ReferenceInput
  inputPopulationId: String  _inputPopulationId: ElementBaseInput
  aggregateMethod: CodeableConceptInput
}

input MeasureGroupInputStratifierInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  linkId: String  _linkId: ElementBaseInput
  code: CodeableConceptInput
  description: markdown  _description: ElementBaseInput
  criteria: ExpressionInput
  groupDefinition: ReferenceInput
  valueSet: canonical  _valueSet: ElementBaseInput
  unit: String  _unit: ElementBaseInput
  component: [MeasureGroupInputComponentInputInput]
}

input MeasureSupplementalDataInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  linkId: String  _linkId: ElementBaseInput
  code: CodeableConceptInput
  usage: [CodeableConceptInput]
  description: markdown  _description: ElementBaseInput
  criteria: ExpressionInput!
  valueSet: canonical  _valueSet: ElementBaseInput
  unit: String  _unit: ElementBaseInput
}

type MeasureReadType {
  Measure(id: ID!): Measure
}

type MeasureListType {
  MeasureList(_filter: String
    composed_of: [reference]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    depends_on: [reference]
    derived_from: [reference]
    description: [String]
    effective: [date]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    predecessor: [reference]
    publisher: [String]
    status: [token]
    subject_canonical: [reference]
    subject_code: [token]
    subject_reference: [reference]
    successor: [reference]
    title: [String]
    topic: [token]
    url: [uri]
    version: [token]
    composed_of: [reference]
    depends_on: [reference]
    derived_from: [reference]
    effective: [date]
    predecessor: [reference]
    successor: [reference]
    topic: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [Measure]
}

type MeasureConnectionType {
  MeasureConection(_filter: String
    composed_of: [reference]
    context: [token]
    context_quantity: [quantity]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    depends_on: [reference]
    derived_from: [reference]
    description: [String]
    effective: [date]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    predecessor: [reference]
    publisher: [String]
    status: [token]
    subject_canonical: [reference]
    subject_code: [token]
    subject_reference: [reference]
    successor: [reference]
    title: [String]
    topic: [token]
    url: [uri]
    version: [token]
    composed_of: [reference]
    depends_on: [reference]
    derived_from: [reference]
    effective: [date]
    predecessor: [reference]
    successor: [reference]
    topic: [token]
    context: [token]
    context_quantity: [quantity]
    context_reference: [reference]
    context_type: [token]
    context_type_quantity: [composite]
    context_type_value: [composite]
    date: [date]
    description: [String]
    identifier: [token]
    jurisdiction: [token]
    name: [String]
    publisher: [String]
    status: [token]
    title: [String]
    url: [uri]
    version: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): MeasureConnection
}

type MeasureConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [MeasureEdge]
}

type MeasureEdge {
  mode: String
  score: Float
  resource: Measure
}

type MeasureCreateType {
  MeasureCreate(resource: MeasureInput): MeasureCreation
}

type MeasureCreation {
  location: String
  resource: Measure
  information: OperationOutcome
}

type MeasureUpdateType {
  MeasureUpdate(id: ID, resource: MeasureInput): MeasureUpdate
}

type MeasureUpdate {
  resource: Measure
  information: OperationOutcome
}

type MeasureDeleteType {
  MeasureDelete(id: ID): MeasureDelete
}

type MeasureDelete {
  information: OperationOutcome
}

