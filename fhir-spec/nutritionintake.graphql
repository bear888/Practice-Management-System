# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface INutritionIntake implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: [CodeableConcept]
  code: CodeableConcept
  subject: Reference!
  encounter: Reference
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBase
  occurrencePeriod: Period
  recorded: dateTime  _recorded: ElementBase
  reportedBoolean: Boolean  _reportedBoolean: ElementBase
  reportedReference: Reference
  nutritionItem: [NutritionIntakeNutritionItem]
  performer: [NutritionIntakePerformer]
  location: Reference
  derivedFrom: [Reference]
  reason: [CodeableReference]
  note: [Annotation]
}

type NutritionIntake implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: [CodeableConcept]
  code: CodeableConcept
  subject: Reference!
  encounter: Reference
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBase
  occurrencePeriod: Period
  recorded: dateTime  _recorded: ElementBase
  reportedBoolean: Boolean  _reportedBoolean: ElementBase
  reportedReference: Reference
  nutritionItem: [NutritionIntakeNutritionItem]
  performer: [NutritionIntakePerformer]
  location: Reference
  derivedFrom: [Reference]
  reason: [CodeableReference]
  note: [Annotation]
}

type NutritionIntakeNutritionItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept
  nutritionProduct: CodeableReference
  consumedItem: [NutritionIntakeNutritionItemConsumedItem]
  notConsumedItem: [NutritionIntakeNutritionItemNotConsumedItem]
}

type NutritionIntakeNutritionItemConsumedItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  schedule: Timing
  amount: Quantity
  rateQuantity: Quantity
  rateRatio: Ratio
  totalIntake: [NutritionIntakeNutritionItemConsumedItemTotalIntake]
}

type NutritionIntakeNutritionItemConsumedItemTotalIntake {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  nutrient: CodeableReference!
  amount: Quantity!
  energy: Quantity
}

type NutritionIntakeNutritionItemNotConsumedItem {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  reason: CodeableConcept
  schedule: Timing
  amount: Quantity
}

type NutritionIntakePerformer {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: Reference!
}

input NutritionIntakeInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  basedOn: [ReferenceInput]
  partOf: [ReferenceInput]
  status: code  _status: ElementBaseInput
  statusReason: [CodeableConceptInput]
  code: CodeableConceptInput
  subject: ReferenceInput!
  encounter: ReferenceInput
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBaseInput
  occurrencePeriod: PeriodInput
  recorded: dateTime  _recorded: ElementBaseInput
  reportedBoolean: Boolean  _reportedBoolean: ElementBaseInput
  reportedReference: ReferenceInput
  nutritionItem: [NutritionIntakeNutritionItemInputInput]
  performer: [NutritionIntakePerformerInputInput]
  location: ReferenceInput
  derivedFrom: [ReferenceInput]
  reason: [CodeableReferenceInput]
  note: [AnnotationInput]
}

input NutritionIntakeNutritionItemInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput
  nutritionProduct: CodeableReferenceInput
  consumedItem: [NutritionIntakeNutritionItemInputConsumedItemInputInput]
  notConsumedItem: [NutritionIntakeNutritionItemInputNotConsumedItemInputInput]
}

input NutritionIntakeNutritionItemInputConsumedItemInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  schedule: TimingInput
  amount: QuantityInput
  rateQuantity: QuantityInput
  rateRatio: RatioInput
  totalIntake: [NutritionIntakeNutritionItemInputConsumedItemInputTotalIntakeInputInput]
}

input NutritionIntakeNutritionItemInputConsumedItemInputTotalIntakeInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  nutrient: CodeableReferenceInput!
  amount: QuantityInput!
  energy: QuantityInput
}

input NutritionIntakeNutritionItemInputNotConsumedItemInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  reason: CodeableConceptInput
  schedule: TimingInput
  amount: QuantityInput
}

input NutritionIntakePerformerInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  function: CodeableConceptInput
  actor: ReferenceInput!
}

type NutritionIntakeReadType {
  NutritionIntake(id: ID!): NutritionIntake
}

type NutritionIntakeListType {
  NutritionIntakeList(_filter: String
    code: [token]
    date: [date]
    encounter: [reference]
    identifier: [token]
    nutrition: [token]
    patient: [reference]
    source: [reference]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [NutritionIntake]
}

type NutritionIntakeConnectionType {
  NutritionIntakeConection(_filter: String
    code: [token]
    date: [date]
    encounter: [reference]
    identifier: [token]
    nutrition: [token]
    patient: [reference]
    source: [reference]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): NutritionIntakeConnection
}

type NutritionIntakeConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [NutritionIntakeEdge]
}

type NutritionIntakeEdge {
  mode: String
  score: Float
  resource: NutritionIntake
}

type NutritionIntakeCreateType {
  NutritionIntakeCreate(resource: NutritionIntakeInput): NutritionIntakeCreation
}

type NutritionIntakeCreation {
  location: String
  resource: NutritionIntake
  information: OperationOutcome
}

type NutritionIntakeUpdateType {
  NutritionIntakeUpdate(id: ID, resource: NutritionIntakeInput): NutritionIntakeUpdate
}

type NutritionIntakeUpdate {
  resource: NutritionIntake
  information: OperationOutcome
}

type NutritionIntakeDeleteType {
  NutritionIntakeDelete(id: ID): NutritionIntakeDelete
}

type NutritionIntakeDelete {
  information: OperationOutcome
}

