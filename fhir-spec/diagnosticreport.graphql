# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IDiagnosticReport implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  status: code  _status: ElementBase
  category: [CodeableConcept]
  code: CodeableConcept!
  subject: Reference
  relatesTo: [RelatedArtifact]
  encounter: Reference
  effectiveDateTime: dateTime  _effectiveDateTime: ElementBase
  effectivePeriod: Period
  issued: instant  _issued: ElementBase
  procedure: [Reference]
  performer: [Reference]
  resultsInterpreter: [Reference]
  specimen: [Reference]
  result: [Reference]
  note: [Annotation]
  study: [Reference]
  supportingInfo: [DiagnosticReportSupportingInfo]
  media: [DiagnosticReportMedia]
  composition: Reference
  conclusion: markdown  _conclusion: ElementBase
  conclusionCode: [CodeableReference]
  recomendation: [CodeableReference]
  presentedForm: [Attachment]
  communication: [Reference]
}

type DiagnosticReport implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  status: code  _status: ElementBase
  category: [CodeableConcept]
  code: CodeableConcept!
  subject: Reference
  relatesTo: [RelatedArtifact]
  encounter: Reference
  effectiveDateTime: dateTime  _effectiveDateTime: ElementBase
  effectivePeriod: Period
  issued: instant  _issued: ElementBase
  procedure: [Reference]
  performer: [Reference]
  resultsInterpreter: [Reference]
  specimen: [Reference]
  result: [Reference]
  note: [Annotation]
  study: [Reference]
  supportingInfo: [DiagnosticReportSupportingInfo]
  media: [DiagnosticReportMedia]
  composition: Reference
  conclusion: markdown  _conclusion: ElementBase
  conclusionCode: [CodeableReference]
  recomendation: [CodeableReference]
  presentedForm: [Attachment]
  communication: [Reference]
}

type DiagnosticReportSupportingInfo {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: CodeableConcept!
  reference: Reference!
}

type DiagnosticReportMedia {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  comment: String  _comment: ElementBase
  link: Reference!
}

input DiagnosticReportInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  basedOn: [ReferenceInput]
  status: code  _status: ElementBaseInput
  category: [CodeableConceptInput]
  code: CodeableConceptInput!
  subject: ReferenceInput
  relatesTo: [RelatedArtifactInput]
  encounter: ReferenceInput
  effectiveDateTime: dateTime  _effectiveDateTime: ElementBaseInput
  effectivePeriod: PeriodInput
  issued: instant  _issued: ElementBaseInput
  procedure: [ReferenceInput]
  performer: [ReferenceInput]
  resultsInterpreter: [ReferenceInput]
  specimen: [ReferenceInput]
  result: [ReferenceInput]
  note: [AnnotationInput]
  study: [ReferenceInput]
  supportingInfo: [DiagnosticReportSupportingInfoInputInput]
  media: [DiagnosticReportMediaInputInput]
  composition: ReferenceInput
  conclusion: markdown  _conclusion: ElementBaseInput
  conclusionCode: [CodeableReferenceInput]
  recomendation: [CodeableReferenceInput]
  presentedForm: [AttachmentInput]
  communication: [ReferenceInput]
}

input DiagnosticReportSupportingInfoInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: CodeableConceptInput!
  reference: ReferenceInput!
}

input DiagnosticReportMediaInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  comment: String  _comment: ElementBaseInput
  link: ReferenceInput!
}

type DiagnosticReportReadType {
  DiagnosticReport(id: ID!): DiagnosticReport
}

type DiagnosticReportListType {
  DiagnosticReportList(_filter: String
    based_on: [reference]
    category: [token]
    code: [token]
    conclusioncode_code: [token]
    conclusioncode_reference: [reference]
    date: [date]
    encounter: [reference]
    identifier: [token]
    issued: [date]
    media: [reference]
    patient: [reference]
    performer: [reference]
    procedure: [reference]
    result: [reference]
    results_interpreter: [reference]
    specimen: [reference]
    status: [token]
    study: [reference]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [DiagnosticReport]
}

type DiagnosticReportConnectionType {
  DiagnosticReportConection(_filter: String
    based_on: [reference]
    category: [token]
    code: [token]
    conclusioncode_code: [token]
    conclusioncode_reference: [reference]
    date: [date]
    encounter: [reference]
    identifier: [token]
    issued: [date]
    media: [reference]
    patient: [reference]
    performer: [reference]
    procedure: [reference]
    result: [reference]
    results_interpreter: [reference]
    specimen: [reference]
    status: [token]
    study: [reference]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): DiagnosticReportConnection
}

type DiagnosticReportConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [DiagnosticReportEdge]
}

type DiagnosticReportEdge {
  mode: String
  score: Float
  resource: DiagnosticReport
}

type DiagnosticReportCreateType {
  DiagnosticReportCreate(resource: DiagnosticReportInput): DiagnosticReportCreation
}

type DiagnosticReportCreation {
  location: String
  resource: DiagnosticReport
  information: OperationOutcome
}

type DiagnosticReportUpdateType {
  DiagnosticReportUpdate(id: ID, resource: DiagnosticReportInput): DiagnosticReportUpdate
}

type DiagnosticReportUpdate {
  resource: DiagnosticReport
  information: OperationOutcome
}

type DiagnosticReportDeleteType {
  DiagnosticReportDelete(id: ID): DiagnosticReportDelete
}

type DiagnosticReportDelete {
  information: OperationOutcome
}

