# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IMedicationAdministration implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: [CodeableConcept]
  category: [CodeableConcept]
  medication: CodeableReference!
  subject: Reference!
  encounter: Reference
  supportingInformation: [Reference]
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBase
  occurrencePeriod: Period
  occurrenceTiming: Timing
  recorded: dateTime  _recorded: ElementBase
  isSubPotent: Boolean  _isSubPotent: ElementBase
  subPotentReason: [CodeableConcept]
  performer: [MedicationAdministrationPerformer]
  reason: [CodeableReference]
  request: Reference
  device: [CodeableReference]
  note: [Annotation]
  dosage: MedicationAdministrationDosage
  eventHistory: [Reference]
}

type MedicationAdministration implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  partOf: [Reference]
  status: code  _status: ElementBase
  statusReason: [CodeableConcept]
  category: [CodeableConcept]
  medication: CodeableReference!
  subject: Reference!
  encounter: Reference
  supportingInformation: [Reference]
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBase
  occurrencePeriod: Period
  occurrenceTiming: Timing
  recorded: dateTime  _recorded: ElementBase
  isSubPotent: Boolean  _isSubPotent: ElementBase
  subPotentReason: [CodeableConcept]
  performer: [MedicationAdministrationPerformer]
  reason: [CodeableReference]
  request: Reference
  device: [CodeableReference]
  note: [Annotation]
  dosage: MedicationAdministrationDosage
  eventHistory: [Reference]
}

type MedicationAdministrationPerformer {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  function: CodeableConcept
  actor: CodeableReference!
}

type MedicationAdministrationDosage {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  text: String  _text: ElementBase
  site: CodeableConcept
  route: CodeableConcept
  method: CodeableConcept
  dose: Quantity
  rateRatio: Ratio
  rateQuantity: Quantity
}

input MedicationAdministrationInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  basedOn: [ReferenceInput]
  partOf: [ReferenceInput]
  status: code  _status: ElementBaseInput
  statusReason: [CodeableConceptInput]
  category: [CodeableConceptInput]
  medication: CodeableReferenceInput!
  subject: ReferenceInput!
  encounter: ReferenceInput
  supportingInformation: [ReferenceInput]
  occurrenceDateTime: dateTime  _occurrenceDateTime: ElementBaseInput
  occurrencePeriod: PeriodInput
  occurrenceTiming: TimingInput
  recorded: dateTime  _recorded: ElementBaseInput
  isSubPotent: Boolean  _isSubPotent: ElementBaseInput
  subPotentReason: [CodeableConceptInput]
  performer: [MedicationAdministrationPerformerInputInput]
  reason: [CodeableReferenceInput]
  request: ReferenceInput
  device: [CodeableReferenceInput]
  note: [AnnotationInput]
  dosage: MedicationAdministrationDosageInputInput
  eventHistory: [ReferenceInput]
}

input MedicationAdministrationPerformerInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  function: CodeableConceptInput
  actor: CodeableReferenceInput!
}

input MedicationAdministrationDosageInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  text: String  _text: ElementBaseInput
  site: CodeableConceptInput
  route: CodeableConceptInput
  method: CodeableConceptInput
  dose: QuantityInput
  rateRatio: RatioInput
  rateQuantity: QuantityInput
}

type MedicationAdministrationReadType {
  MedicationAdministration(id: ID!): MedicationAdministration
}

type MedicationAdministrationListType {
  MedicationAdministrationList(_filter: String
    code: [token]
    date: [date]
    device: [reference]
    encounter: [reference]
    identifier: [token]
    medication: [reference]
    patient: [reference]
    performer: [reference]
    performer_device_code: [token]
    reason_given: [reference]
    reason_given_code: [token]
    reason_not_given: [token]
    request: [reference]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [MedicationAdministration]
}

type MedicationAdministrationConnectionType {
  MedicationAdministrationConection(_filter: String
    code: [token]
    date: [date]
    device: [reference]
    encounter: [reference]
    identifier: [token]
    medication: [reference]
    patient: [reference]
    performer: [reference]
    performer_device_code: [token]
    reason_given: [reference]
    reason_given_code: [token]
    reason_not_given: [token]
    request: [reference]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): MedicationAdministrationConnection
}

type MedicationAdministrationConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [MedicationAdministrationEdge]
}

type MedicationAdministrationEdge {
  mode: String
  score: Float
  resource: MedicationAdministration
}

type MedicationAdministrationCreateType {
  MedicationAdministrationCreate(resource: MedicationAdministrationInput): MedicationAdministrationCreation
}

type MedicationAdministrationCreation {
  location: String
  resource: MedicationAdministration
  information: OperationOutcome
}

type MedicationAdministrationUpdateType {
  MedicationAdministrationUpdate(id: ID, resource: MedicationAdministrationInput): MedicationAdministrationUpdate
}

type MedicationAdministrationUpdate {
  resource: MedicationAdministration
  information: OperationOutcome
}

type MedicationAdministrationDeleteType {
  MedicationAdministrationDelete(id: ID): MedicationAdministrationDelete
}

type MedicationAdministrationDelete {
  information: OperationOutcome
}

