# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IFormularyItem implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  code: CodeableConcept
  status: code  _status: ElementBase
}

type FormularyItem implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  code: CodeableConcept
  status: code  _status: ElementBase
}

input FormularyItemInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  code: CodeableConceptInput
  status: code  _status: ElementBaseInput
}

type FormularyItemReadType {
  FormularyItem(id: ID!): FormularyItem
}

type FormularyItemListType {
  FormularyItemList(_filter: String
    code: [token]
    identifier: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [FormularyItem]
}

type FormularyItemConnectionType {
  FormularyItemConection(_filter: String
    code: [token]
    identifier: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): FormularyItemConnection
}

type FormularyItemConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [FormularyItemEdge]
}

type FormularyItemEdge {
  mode: String
  score: Float
  resource: FormularyItem
}

type FormularyItemCreateType {
  FormularyItemCreate(resource: FormularyItemInput): FormularyItemCreation
}

type FormularyItemCreation {
  location: String
  resource: FormularyItem
  information: OperationOutcome
}

type FormularyItemUpdateType {
  FormularyItemUpdate(id: ID, resource: FormularyItemInput): FormularyItemUpdate
}

type FormularyItemUpdate {
  resource: FormularyItem
  information: OperationOutcome
}

type FormularyItemDeleteType {
  FormularyItemDelete(id: ID): FormularyItemDelete
}

type FormularyItemDelete {
  information: OperationOutcome
}

