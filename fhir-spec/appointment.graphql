# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IAppointment implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  cancellationReason: CodeableConcept
  class: [CodeableConcept]
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableReference]
  specialty: [CodeableConcept]
  appointmentType: CodeableConcept
  reason: [CodeableReference]
  priority: CodeableConcept
  description: String  _description: ElementBase
  replaces: [Reference]
  virtualService: [VirtualServiceDetail]
  supportingInformation: [Reference]
  previousAppointment: Reference
  originatingAppointment: Reference
  start: instant  _start: ElementBase
  end: instant  _end: ElementBase
  minutesDuration: positiveInt  _minutesDuration: ElementBase
  requestedPeriod: [Period]
  slot: [Reference]
  account: [Reference]
  created: dateTime  _created: ElementBase
  cancellationDate: dateTime  _cancellationDate: ElementBase
  note: [Annotation]
  patientInstruction: [CodeableReference]
  basedOn: [Reference]
  subject: Reference
  participant: [AppointmentParticipant]!
  recurrenceId: positiveInt  _recurrenceId: ElementBase
  occurrenceChanged: Boolean  _occurrenceChanged: ElementBase
  recurrenceTemplate: [AppointmentRecurrenceTemplate]
}

type Appointment implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  cancellationReason: CodeableConcept
  class: [CodeableConcept]
  serviceCategory: [CodeableConcept]
  serviceType: [CodeableReference]
  specialty: [CodeableConcept]
  appointmentType: CodeableConcept
  reason: [CodeableReference]
  priority: CodeableConcept
  description: String  _description: ElementBase
  replaces: [Reference]
  virtualService: [VirtualServiceDetail]
  supportingInformation: [Reference]
  previousAppointment: Reference
  originatingAppointment: Reference
  start: instant  _start: ElementBase
  end: instant  _end: ElementBase
  minutesDuration: positiveInt  _minutesDuration: ElementBase
  requestedPeriod: [Period]
  slot: [Reference]
  account: [Reference]
  created: dateTime  _created: ElementBase
  cancellationDate: dateTime  _cancellationDate: ElementBase
  note: [Annotation]
  patientInstruction: [CodeableReference]
  basedOn: [Reference]
  subject: Reference
  participant: [AppointmentParticipant]!
  recurrenceId: positiveInt  _recurrenceId: ElementBase
  occurrenceChanged: Boolean  _occurrenceChanged: ElementBase
  recurrenceTemplate: [AppointmentRecurrenceTemplate]
}

type AppointmentParticipant {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  type: [CodeableConcept]
  period: Period
  actor: Reference
  required: Boolean  _required: ElementBase
  status: code  _status: ElementBase
}

type AppointmentRecurrenceTemplate {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  timezone: CodeableConcept
  recurrenceType: CodeableConcept!
  lastOccurrenceDate: date  _lastOccurrenceDate: ElementBase
  occurrenceCount: positiveInt  _occurrenceCount: ElementBase
  occurrenceDate: [date]  _occurrenceDate: [ElementBase]
  weeklyTemplate: AppointmentRecurrenceTemplateWeeklyTemplate
  monthlyTemplate: AppointmentRecurrenceTemplateMonthlyTemplate
  yearlyTemplate: AppointmentRecurrenceTemplateYearlyTemplate
  excludingDate: [date]  _excludingDate: [ElementBase]
  excludingRecurrenceId: [positiveInt]  _excludingRecurrenceId: [ElementBase]
}

type AppointmentRecurrenceTemplateWeeklyTemplate {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  monday: Boolean  _monday: ElementBase
  tuesday: Boolean  _tuesday: ElementBase
  wednesday: Boolean  _wednesday: ElementBase
  thursday: Boolean  _thursday: ElementBase
  friday: Boolean  _friday: ElementBase
  saturday: Boolean  _saturday: ElementBase
  sunday: Boolean  _sunday: ElementBase
  weekInterval: positiveInt  _weekInterval: ElementBase
}

type AppointmentRecurrenceTemplateMonthlyTemplate {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  dayOfMonth: positiveInt  _dayOfMonth: ElementBase
  nthWeekOfMonth: Coding
  dayOfWeek: Coding
  monthInterval: positiveInt  _monthInterval: ElementBase
}

type AppointmentRecurrenceTemplateYearlyTemplate {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  yearInterval: positiveInt  _yearInterval: ElementBase
}

input AppointmentInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  status: code  _status: ElementBaseInput
  cancellationReason: CodeableConceptInput
  class: [CodeableConceptInput]
  serviceCategory: [CodeableConceptInput]
  serviceType: [CodeableReferenceInput]
  specialty: [CodeableConceptInput]
  appointmentType: CodeableConceptInput
  reason: [CodeableReferenceInput]
  priority: CodeableConceptInput
  description: String  _description: ElementBaseInput
  replaces: [ReferenceInput]
  virtualService: [VirtualServiceDetailInput]
  supportingInformation: [ReferenceInput]
  previousAppointment: ReferenceInput
  originatingAppointment: ReferenceInput
  start: instant  _start: ElementBaseInput
  end: instant  _end: ElementBaseInput
  minutesDuration: positiveInt  _minutesDuration: ElementBaseInput
  requestedPeriod: [PeriodInput]
  slot: [ReferenceInput]
  account: [ReferenceInput]
  created: dateTime  _created: ElementBaseInput
  cancellationDate: dateTime  _cancellationDate: ElementBaseInput
  note: [AnnotationInput]
  patientInstruction: [CodeableReferenceInput]
  basedOn: [ReferenceInput]
  subject: ReferenceInput
  participant: [AppointmentParticipantInputInput]!
  recurrenceId: positiveInt  _recurrenceId: ElementBaseInput
  occurrenceChanged: Boolean  _occurrenceChanged: ElementBaseInput
  recurrenceTemplate: [AppointmentRecurrenceTemplateInputInput]
}

input AppointmentParticipantInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  type: [CodeableConceptInput]
  period: PeriodInput
  actor: ReferenceInput
  required: Boolean  _required: ElementBaseInput
  status: code  _status: ElementBaseInput
}

input AppointmentRecurrenceTemplateInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  timezone: CodeableConceptInput
  recurrenceType: CodeableConceptInput!
  lastOccurrenceDate: date  _lastOccurrenceDate: ElementBaseInput
  occurrenceCount: positiveInt  _occurrenceCount: ElementBaseInput
  occurrenceDate: [date]  _occurrenceDate: [ElementBaseInput]
  weeklyTemplate: AppointmentRecurrenceTemplateInputWeeklyTemplateInputInput
  monthlyTemplate: AppointmentRecurrenceTemplateInputMonthlyTemplateInputInput
  yearlyTemplate: AppointmentRecurrenceTemplateInputYearlyTemplateInputInput
  excludingDate: [date]  _excludingDate: [ElementBaseInput]
  excludingRecurrenceId: [positiveInt]  _excludingRecurrenceId: [ElementBaseInput]
}

input AppointmentRecurrenceTemplateInputWeeklyTemplateInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  monday: Boolean  _monday: ElementBaseInput
  tuesday: Boolean  _tuesday: ElementBaseInput
  wednesday: Boolean  _wednesday: ElementBaseInput
  thursday: Boolean  _thursday: ElementBaseInput
  friday: Boolean  _friday: ElementBaseInput
  saturday: Boolean  _saturday: ElementBaseInput
  sunday: Boolean  _sunday: ElementBaseInput
  weekInterval: positiveInt  _weekInterval: ElementBaseInput
}

input AppointmentRecurrenceTemplateInputMonthlyTemplateInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  dayOfMonth: positiveInt  _dayOfMonth: ElementBaseInput
  nthWeekOfMonth: CodingInput
  dayOfWeek: CodingInput
  monthInterval: positiveInt  _monthInterval: ElementBaseInput
}

input AppointmentRecurrenceTemplateInputYearlyTemplateInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  yearInterval: positiveInt  _yearInterval: ElementBaseInput
}

type AppointmentReadType {
  Appointment(id: ID!): Appointment
}

type AppointmentListType {
  AppointmentList(_filter: String
    actor: [reference]
    appointment_type: [token]
    based_on: [reference]
    date: [date]
    group: [reference]
    has_recurrence_template: [token]
    identifier: [token]
    is_recurring: [token]
    location: [reference]
    occurrence_changed: [token]
    originating_appointment: [reference]
    part_status: [token]
    patient: [reference]
    practitioner: [reference]
    previous_appointment: [reference]
    reason_code: [token]
    reason_reference: [reference]
    requested_period: [date]
    service_category: [token]
    service_type: [token]
    service_type_reference: [reference]
    slot: [reference]
    specialty: [token]
    status: [token]
    subject: [reference]
    supporting_info: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [Appointment]
}

type AppointmentConnectionType {
  AppointmentConection(_filter: String
    actor: [reference]
    appointment_type: [token]
    based_on: [reference]
    date: [date]
    group: [reference]
    has_recurrence_template: [token]
    identifier: [token]
    is_recurring: [token]
    location: [reference]
    occurrence_changed: [token]
    originating_appointment: [reference]
    part_status: [token]
    patient: [reference]
    practitioner: [reference]
    previous_appointment: [reference]
    reason_code: [token]
    reason_reference: [reference]
    requested_period: [date]
    service_category: [token]
    service_type: [token]
    service_type_reference: [reference]
    slot: [reference]
    specialty: [token]
    status: [token]
    subject: [reference]
    supporting_info: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): AppointmentConnection
}

type AppointmentConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [AppointmentEdge]
}

type AppointmentEdge {
  mode: String
  score: Float
  resource: Appointment
}

type AppointmentCreateType {
  AppointmentCreate(resource: AppointmentInput): AppointmentCreation
}

type AppointmentCreation {
  location: String
  resource: Appointment
  information: OperationOutcome
}

type AppointmentUpdateType {
  AppointmentUpdate(id: ID, resource: AppointmentInput): AppointmentUpdate
}

type AppointmentUpdate {
  resource: Appointment
  information: OperationOutcome
}

type AppointmentDeleteType {
  AppointmentDelete(id: ID): AppointmentDelete
}

type AppointmentDelete {
  information: OperationOutcome
}

