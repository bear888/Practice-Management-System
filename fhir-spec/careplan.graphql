# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface ICarePlan implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  replaces: [Reference]
  partOf: [Reference]
  status: code  _status: ElementBase
  intent: code  _intent: ElementBase
  category: [CodeableConcept]
  title: String  _title: ElementBase
  description: String  _description: ElementBase
  subject: Reference!
  encounter: Reference
  period: Period
  created: dateTime  _created: ElementBase
  custodian: Reference
  contributor: [Reference]
  careTeam: [Reference]
  addresses: [CodeableReference]
  supportingInfo: [Reference]
  goal: [Reference]
  activity: [CarePlanActivity]
  note: [Annotation]
}

type CarePlan implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  basedOn: [Reference]
  replaces: [Reference]
  partOf: [Reference]
  status: code  _status: ElementBase
  intent: code  _intent: ElementBase
  category: [CodeableConcept]
  title: String  _title: ElementBase
  description: String  _description: ElementBase
  subject: Reference!
  encounter: Reference
  period: Period
  created: dateTime  _created: ElementBase
  custodian: Reference
  contributor: [Reference]
  careTeam: [Reference]
  addresses: [CodeableReference]
  supportingInfo: [Reference]
  goal: [Reference]
  activity: [CarePlanActivity]
  note: [Annotation]
}

type CarePlanActivity {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  performedActivity: [CodeableReference]
  progress: [Annotation]
  plannedActivityReference: Reference
}

input CarePlanInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  basedOn: [ReferenceInput]
  replaces: [ReferenceInput]
  partOf: [ReferenceInput]
  status: code  _status: ElementBaseInput
  intent: code  _intent: ElementBaseInput
  category: [CodeableConceptInput]
  title: String  _title: ElementBaseInput
  description: String  _description: ElementBaseInput
  subject: ReferenceInput!
  encounter: ReferenceInput
  period: PeriodInput
  created: dateTime  _created: ElementBaseInput
  custodian: ReferenceInput
  contributor: [ReferenceInput]
  careTeam: [ReferenceInput]
  addresses: [CodeableReferenceInput]
  supportingInfo: [ReferenceInput]
  goal: [ReferenceInput]
  activity: [CarePlanActivityInputInput]
  note: [AnnotationInput]
}

input CarePlanActivityInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  performedActivity: [CodeableReferenceInput]
  progress: [AnnotationInput]
  plannedActivityReference: ReferenceInput
}

type CarePlanReadType {
  CarePlan(id: ID!): CarePlan
}

type CarePlanListType {
  CarePlanList(_filter: String
    activity_reference: [reference]
    based_on: [reference]
    care_team: [reference]
    category: [token]
    condition: [reference]
    custodian: [reference]
    date: [date]
    encounter: [reference]
    goal: [reference]
    identifier: [token]
    intent: [token]
    part_of: [reference]
    patient: [reference]
    replaces: [reference]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [CarePlan]
}

type CarePlanConnectionType {
  CarePlanConection(_filter: String
    activity_reference: [reference]
    based_on: [reference]
    care_team: [reference]
    category: [token]
    condition: [reference]
    custodian: [reference]
    date: [date]
    encounter: [reference]
    goal: [reference]
    identifier: [token]
    intent: [token]
    part_of: [reference]
    patient: [reference]
    replaces: [reference]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): CarePlanConnection
}

type CarePlanConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [CarePlanEdge]
}

type CarePlanEdge {
  mode: String
  score: Float
  resource: CarePlan
}

type CarePlanCreateType {
  CarePlanCreate(resource: CarePlanInput): CarePlanCreation
}

type CarePlanCreation {
  location: String
  resource: CarePlan
  information: OperationOutcome
}

type CarePlanUpdateType {
  CarePlanUpdate(id: ID, resource: CarePlanInput): CarePlanUpdate
}

type CarePlanUpdate {
  resource: CarePlan
  information: OperationOutcome
}

type CarePlanDeleteType {
  CarePlanDelete(id: ID): CarePlanDelete
}

type CarePlanDelete {
  information: OperationOutcome
}

