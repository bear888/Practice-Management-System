# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IHealthcareService implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  providedBy: Reference
  offeredIn: [Reference]
  category: [CodeableConcept]
  type: [CodeableConcept]
  specialty: [CodeableConcept]
  location: [Reference]
  name: String  _name: ElementBase
  comment: markdown  _comment: ElementBase
  extraDetails: markdown  _extraDetails: ElementBase
  photo: Attachment
  contact: [ExtendedContactDetail]
  coverageArea: [Reference]
  serviceProvisionCode: [CodeableConcept]
  eligibility: [HealthcareServiceEligibility]
  program: [CodeableConcept]
  characteristic: [CodeableConcept]
  communication: [CodeableConcept]
  referralMethod: [CodeableConcept]
  referralRequired: Boolean  _referralRequired: ElementBase
  appointmentRequired: Boolean  _appointmentRequired: ElementBase
  availability: Availability
  endpoint: [Reference]
}

type HealthcareService implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  active: Boolean  _active: ElementBase
  providedBy: Reference
  offeredIn: [Reference]
  category: [CodeableConcept]
  type: [CodeableConcept]
  specialty: [CodeableConcept]
  location: [Reference]
  name: String  _name: ElementBase
  comment: markdown  _comment: ElementBase
  extraDetails: markdown  _extraDetails: ElementBase
  photo: Attachment
  contact: [ExtendedContactDetail]
  coverageArea: [Reference]
  serviceProvisionCode: [CodeableConcept]
  eligibility: [HealthcareServiceEligibility]
  program: [CodeableConcept]
  characteristic: [CodeableConcept]
  communication: [CodeableConcept]
  referralMethod: [CodeableConcept]
  referralRequired: Boolean  _referralRequired: ElementBase
  appointmentRequired: Boolean  _appointmentRequired: ElementBase
  availability: Availability
  endpoint: [Reference]
}

type HealthcareServiceEligibility {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  code: CodeableConcept
  valueCodeableConcept: CodeableConcept
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueQuantity: Quantity
  valueRange: Range
  valueReference: Reference
  comment: markdown  _comment: ElementBase
  period: markdown  _period: ElementBase
}

input HealthcareServiceInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  active: Boolean  _active: ElementBaseInput
  providedBy: ReferenceInput
  offeredIn: [ReferenceInput]
  category: [CodeableConceptInput]
  type: [CodeableConceptInput]
  specialty: [CodeableConceptInput]
  location: [ReferenceInput]
  name: String  _name: ElementBaseInput
  comment: markdown  _comment: ElementBaseInput
  extraDetails: markdown  _extraDetails: ElementBaseInput
  photo: AttachmentInput
  contact: [ExtendedContactDetailInput]
  coverageArea: [ReferenceInput]
  serviceProvisionCode: [CodeableConceptInput]
  eligibility: [HealthcareServiceEligibilityInputInput]
  program: [CodeableConceptInput]
  characteristic: [CodeableConceptInput]
  communication: [CodeableConceptInput]
  referralMethod: [CodeableConceptInput]
  referralRequired: Boolean  _referralRequired: ElementBaseInput
  appointmentRequired: Boolean  _appointmentRequired: ElementBaseInput
  availability: AvailabilityInput
  endpoint: [ReferenceInput]
}

input HealthcareServiceEligibilityInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  code: CodeableConceptInput
  valueCodeableConcept: CodeableConceptInput
  valueBoolean: Boolean  _valueBoolean: ElementBaseInput
  valueQuantity: QuantityInput
  valueRange: RangeInput
  valueReference: ReferenceInput
  comment: markdown  _comment: ElementBaseInput
  period: markdown  _period: ElementBaseInput
}

type HealthcareServiceReadType {
  HealthcareService(id: ID!): HealthcareService
}

type HealthcareServiceListType {
  HealthcareServiceList(_filter: String
    active: [token]
    characteristic: [token]
    communication: [token]
    coverage_area: [reference]
    eligibility: [token]
    endpoint: [reference]
    identifier: [token]
    location: [reference]
    name: [String]
    offered_in: [reference]
    organization: [reference]
    program: [token]
    service_category: [token]
    service_type: [token]
    specialty: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [HealthcareService]
}

type HealthcareServiceConnectionType {
  HealthcareServiceConection(_filter: String
    active: [token]
    characteristic: [token]
    communication: [token]
    coverage_area: [reference]
    eligibility: [token]
    endpoint: [reference]
    identifier: [token]
    location: [reference]
    name: [String]
    offered_in: [reference]
    organization: [reference]
    program: [token]
    service_category: [token]
    service_type: [token]
    specialty: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): HealthcareServiceConnection
}

type HealthcareServiceConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [HealthcareServiceEdge]
}

type HealthcareServiceEdge {
  mode: String
  score: Float
  resource: HealthcareService
}

type HealthcareServiceCreateType {
  HealthcareServiceCreate(resource: HealthcareServiceInput): HealthcareServiceCreation
}

type HealthcareServiceCreation {
  location: String
  resource: HealthcareService
  information: OperationOutcome
}

type HealthcareServiceUpdateType {
  HealthcareServiceUpdate(id: ID, resource: HealthcareServiceInput): HealthcareServiceUpdate
}

type HealthcareServiceUpdate {
  resource: HealthcareService
  information: OperationOutcome
}

type HealthcareServiceDeleteType {
  HealthcareServiceDelete(id: ID): HealthcareServiceDelete
}

type HealthcareServiceDelete {
  information: OperationOutcome
}

