# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IEpisodeOfCare implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  statusHistory: [EpisodeOfCareStatusHistory]
  type: [CodeableConcept]
  reason: [EpisodeOfCareReason]
  diagnosis: [EpisodeOfCareDiagnosis]
  subject: Reference!
  managingOrganization: Reference
  period: Period
  referralRequest: [Reference]
  careManager: Reference
  careTeam: [Reference]
  account: [Reference]
}

type EpisodeOfCare implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  statusHistory: [EpisodeOfCareStatusHistory]
  type: [CodeableConcept]
  reason: [EpisodeOfCareReason]
  diagnosis: [EpisodeOfCareDiagnosis]
  subject: Reference!
  managingOrganization: Reference
  period: Period
  referralRequest: [Reference]
  careManager: Reference
  careTeam: [Reference]
  account: [Reference]
}

type EpisodeOfCareStatusHistory {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  status: code  _status: ElementBase
  period: Period!
}

type EpisodeOfCareReason {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  use: [CodeableConcept]
  value: [CodeableReference]
}

type EpisodeOfCareDiagnosis {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  condition: [CodeableReference]
  use: [CodeableConcept]
}

input EpisodeOfCareInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  status: code  _status: ElementBaseInput
  statusHistory: [EpisodeOfCareStatusHistoryInputInput]
  type: [CodeableConceptInput]
  reason: [EpisodeOfCareReasonInputInput]
  diagnosis: [EpisodeOfCareDiagnosisInputInput]
  subject: ReferenceInput!
  managingOrganization: ReferenceInput
  period: PeriodInput
  referralRequest: [ReferenceInput]
  careManager: ReferenceInput
  careTeam: [ReferenceInput]
  account: [ReferenceInput]
}

input EpisodeOfCareStatusHistoryInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  status: code  _status: ElementBaseInput
  period: PeriodInput!
}

input EpisodeOfCareReasonInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  use: [CodeableConceptInput]
  value: [CodeableReferenceInput]
}

input EpisodeOfCareDiagnosisInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  condition: [CodeableReferenceInput]
  use: [CodeableConceptInput]
}

type EpisodeOfCareReadType {
  EpisodeOfCare(id: ID!): EpisodeOfCare
}

type EpisodeOfCareListType {
  EpisodeOfCareList(_filter: String
    care_manager: [reference]
    date: [date]
    diagnosis_code: [token]
    diagnosis_reference: [reference]
    identifier: [token]
    incoming_referral: [reference]
    organization: [reference]
    patient: [reference]
    reason_code: [token]
    reason_reference: [reference]
    status: [token]
    subject: [reference]
    type: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [EpisodeOfCare]
}

type EpisodeOfCareConnectionType {
  EpisodeOfCareConection(_filter: String
    care_manager: [reference]
    date: [date]
    diagnosis_code: [token]
    diagnosis_reference: [reference]
    identifier: [token]
    incoming_referral: [reference]
    organization: [reference]
    patient: [reference]
    reason_code: [token]
    reason_reference: [reference]
    status: [token]
    subject: [reference]
    type: [token]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): EpisodeOfCareConnection
}

type EpisodeOfCareConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [EpisodeOfCareEdge]
}

type EpisodeOfCareEdge {
  mode: String
  score: Float
  resource: EpisodeOfCare
}

type EpisodeOfCareCreateType {
  EpisodeOfCareCreate(resource: EpisodeOfCareInput): EpisodeOfCareCreation
}

type EpisodeOfCareCreation {
  location: String
  resource: EpisodeOfCare
  information: OperationOutcome
}

type EpisodeOfCareUpdateType {
  EpisodeOfCareUpdate(id: ID, resource: EpisodeOfCareInput): EpisodeOfCareUpdate
}

type EpisodeOfCareUpdate {
  resource: EpisodeOfCare
  information: OperationOutcome
}

type EpisodeOfCareDeleteType {
  EpisodeOfCareDelete(id: ID): EpisodeOfCareDelete
}

type EpisodeOfCareDelete {
  information: OperationOutcome
}

