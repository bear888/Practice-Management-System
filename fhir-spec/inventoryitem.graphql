# FHIR GraphQL Schema. Version 6.0.0-ballot3

# import * from 'types.graphql'

interface IInventoryItem implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  category: [CodeableConcept]
  code: [CodeableConcept]
  name: [InventoryItemName]
  responsibleOrganization: [InventoryItemResponsibleOrganization]
  description: InventoryItemDescription
  inventoryStatus: [CodeableConcept]
  baseUnit: CodeableConcept
  netContent: Quantity
  association: [InventoryItemAssociation]
  characteristic: [InventoryItemCharacteristic]
  instance: InventoryItemInstance
  productReference: Reference
}

type InventoryItem implements IDomainResource & IResource & IBase {
  id: ID
  meta: Meta
  implicitRules: uri  _implicitRules: ElementBase
  language: code  _language: ElementBase
  text: Narrative
  contained: [Resource]
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  status: code  _status: ElementBase
  category: [CodeableConcept]
  code: [CodeableConcept]
  name: [InventoryItemName]
  responsibleOrganization: [InventoryItemResponsibleOrganization]
  description: InventoryItemDescription
  inventoryStatus: [CodeableConcept]
  baseUnit: CodeableConcept
  netContent: Quantity
  association: [InventoryItemAssociation]
  characteristic: [InventoryItemCharacteristic]
  instance: InventoryItemInstance
  productReference: Reference
}

type InventoryItemName {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  nameType: Coding!
  language: code  _language: ElementBase
  name: String  _name: ElementBase
}

type InventoryItemResponsibleOrganization {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  role: CodeableConcept!
  organization: Reference!
}

type InventoryItemDescription {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  language: code  _language: ElementBase
  description: String  _description: ElementBase
}

type InventoryItemAssociation {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  associationType: CodeableConcept!
  relatedItem: Reference!
  quantity: Ratio!
}

type InventoryItemCharacteristic {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  characteristicType: CodeableConcept!
  valueString: String  _valueString: ElementBase
  valueInteger: Int  _valueInteger: ElementBase
  valueDecimal: decimal  _valueDecimal: ElementBase
  valueBoolean: Boolean  _valueBoolean: ElementBase
  valueUrl: url  _valueUrl: ElementBase
  valueDateTime: dateTime  _valueDateTime: ElementBase
  valueQuantity: Quantity
  valueRange: Range
  valueRatio: Ratio
  valueAnnotation: Annotation
  valueAddress: Address
  valueDuration: Duration
  valueCodeableConcept: CodeableConcept
}

type InventoryItemInstance {
  id: String
  extension: [Extension]
  modifierExtension: [Extension]
  identifier: [Identifier]
  lotNumber: String  _lotNumber: ElementBase
  expiry: dateTime  _expiry: ElementBase
  subject: Reference
  location: Reference
}

input InventoryItemInput {
  id: ID
  meta: MetaInput
  implicitRules: uri  _implicitRules: ElementBaseInput
  language: code  _language: ElementBaseInput
  text: NarrativeInput
  contained: [ResourceInput]
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  status: code  _status: ElementBaseInput
  category: [CodeableConceptInput]
  code: [CodeableConceptInput]
  name: [InventoryItemNameInputInput]
  responsibleOrganization: [InventoryItemResponsibleOrganizationInputInput]
  description: InventoryItemDescriptionInputInput
  inventoryStatus: [CodeableConceptInput]
  baseUnit: CodeableConceptInput
  netContent: QuantityInput
  association: [InventoryItemAssociationInputInput]
  characteristic: [InventoryItemCharacteristicInputInput]
  instance: InventoryItemInstanceInputInput
  productReference: ReferenceInput
}

input InventoryItemNameInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  nameType: CodingInput!
  language: code  _language: ElementBaseInput
  name: String  _name: ElementBaseInput
}

input InventoryItemResponsibleOrganizationInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  role: CodeableConceptInput!
  organization: ReferenceInput!
}

input InventoryItemDescriptionInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  language: code  _language: ElementBaseInput
  description: String  _description: ElementBaseInput
}

input InventoryItemAssociationInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  associationType: CodeableConceptInput!
  relatedItem: ReferenceInput!
  quantity: RatioInput!
}

input InventoryItemCharacteristicInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  characteristicType: CodeableConceptInput!
  valueString: String  _valueString: ElementBaseInput
  valueInteger: Int  _valueInteger: ElementBaseInput
  valueDecimal: decimal  _valueDecimal: ElementBaseInput
  valueBoolean: Boolean  _valueBoolean: ElementBaseInput
  valueUrl: url  _valueUrl: ElementBaseInput
  valueDateTime: dateTime  _valueDateTime: ElementBaseInput
  valueQuantity: QuantityInput
  valueRange: RangeInput
  valueRatio: RatioInput
  valueAnnotation: AnnotationInput
  valueAddress: AddressInput
  valueDuration: DurationInput
  valueCodeableConcept: CodeableConceptInput
}

input InventoryItemInstanceInputInput {
  id: String
  extension: [ExtensionInput]
  modifierExtension: [ExtensionInput]
  identifier: [IdentifierInput]
  lotNumber: String  _lotNumber: ElementBaseInput
  expiry: dateTime  _expiry: ElementBaseInput
  subject: ReferenceInput
  location: ReferenceInput
}

type InventoryItemReadType {
  InventoryItem(id: ID!): InventoryItem
}

type InventoryItemListType {
  InventoryItemList(_filter: String
    code: [token]
    identifier: [token]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): [InventoryItem]
}

type InventoryItemConnectionType {
  InventoryItemConection(_filter: String
    code: [token]
    identifier: [token]
    status: [token]
    subject: [reference]
    _text: [special]
    _content: [special]
    _filter: [special]
    _has: [special]
    _id: [token]
    _in: [reference]
    _language: [token]
    _lastUpdated: [date]
    _list: [special]
    _profile: [reference]
    _query: [special]
    _security: [token]
    _source: [uri]
    _tag: [token]
    _type: [special]
    _sort: String
    _count: Int
    _cursor: String): InventoryItemConnection
}

type InventoryItemConnection {
  count: Int
  offset: Int
  pagesize: Int
  first: ID
  previous: ID
  next: ID
  last: ID
  edges: [InventoryItemEdge]
}

type InventoryItemEdge {
  mode: String
  score: Float
  resource: InventoryItem
}

type InventoryItemCreateType {
  InventoryItemCreate(resource: InventoryItemInput): InventoryItemCreation
}

type InventoryItemCreation {
  location: String
  resource: InventoryItem
  information: OperationOutcome
}

type InventoryItemUpdateType {
  InventoryItemUpdate(id: ID, resource: InventoryItemInput): InventoryItemUpdate
}

type InventoryItemUpdate {
  resource: InventoryItem
  information: OperationOutcome
}

type InventoryItemDeleteType {
  InventoryItemDelete(id: ID): InventoryItemDelete
}

type InventoryItemDelete {
  information: OperationOutcome
}

